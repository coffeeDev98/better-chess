{"version":3,"sources":["utils/utils.ts","constants/chessMultiplayerMsgTypes.ts","hooks/useChess.tsx","utils/agoraUtils.ts","hooks/useAgora.tsx","hooks/useChessMultiplayer.tsx","hooks/useBoardEditor.tsx","components/_StyledComponent/StyledComponent.tsx","assets/images/sidePanelIcons/undoMove.svg","assets/images/sidePanelIcons/redoMove.svg","assets/images/sidePanelIcons/history.svg","assets/images/sidePanelIcons/resetBoard.svg","assets/images/sidePanelIcons/flipBoard.svg","assets/images/sidePanelIcons/loadGame.svg","assets/images/chessPieces/wK.svg","assets/images/chessPieces/wQ.svg","assets/images/chessPieces/wB.svg","assets/images/chessPieces/wR.svg","assets/images/chessPieces/wN.svg","assets/images/chessPieces/wP.svg","assets/images/chessPieces/bK.svg","assets/images/chessPieces/bQ.svg","assets/images/chessPieces/bB.svg","assets/images/chessPieces/bR.svg","assets/images/chessPieces/bN.svg","assets/images/chessPieces/bP.svg","components/ChessInterface/ChessInterface.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["COLUMNS","split","isObject","o","Object","prototype","toString","call","isString","s","validPositionObject","pos","ctor","prot","undefined","constructor","hasOwnProperty","isPlainObject","i","square","search","code","pieceCodeToFen","piece","pieceCodeLetters","toUpperCase","toLowerCase","objToFen","obj","fen","currentRow","j","replace","squeezeFenEmptySquares","BOARD_MOVE_UPDATE","BOARD_MOVE_UNDO","Chess","require","squareStyling","pieceSquare","history","targetSquare","length","from","to","backgroundColor","useChess","Agora","Multiplayer","useState","chess","dropSquareStyle","squareStyles","boardPosition","pgn","undoMovesArray","state","setState","useEffect","console","log","channel","on","message","jsonString","data","text","JSON","parse","type","onDrop","sourceSquare","json","move","parametersObj","undoArray","undoMove","promotion","e","moves","verbose","len","flags","indexOf","updateBoard","setBoardPosition","position","onMouseOverSquare","squaresToHighlight","push","highlightStyles","reduce","a","c","background","borderRadius","highlightSquare","onMouseOutSquare","onDragOverSquare","boxShadow","onSquareClick","onSquareRightClick","undoMoveObj","undo","undoMoveMsg","redoMove","redoMoveObj","pop","agoraUtils","messageParser","stringify","messageType","useAgora","setChannel","client","AgoraRTM","createInstance","playerMeta","uid","Math","floor","random","token","axios","get","then","res","login","newChannel","createChannel","join","playerLogin","memberId","sendChannelMessage","sendMessage","useChessMultiplayer","props","updateObject","defaultFen","useBoardEditor","chessboardEditorSidePanelStyle","css","ScChessSidePanel","Styled","div","editorMode","GamePlayPanel1","GamePlayPanel2","chessboardEditorModeStyle","ScChessInterface","dimension","SidePanelMenu","onClick","src","undoIcon","alt","redoIcon","historyIcon","resetIcon","flipIcon","loadIcon","ChessInterface","setDimension","sidePanelSection","boardEditor","updateDimensions","window","addEventListener","removeEventListener","boardContainerDiv","document","getElementById","querySelector","firstChild","firstElementChild","lastChild","lastElementChild","classList","add","setAttribute","clientWidth","customPieces","wK","squareWidth","isDragging","style","width","height","wQ","wB","wR","wN","wP","bK","bQ","bB","bR","bN","bP","chessboardConfig","id","draggable","lightSquareStyle","darkSquareStyle","pieces","boardStyle","getPosition","sparePieces","className","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.6cf03539.chunk.js","sourcesContent":["export const parseJSON = (jsonString: string) => JSON.parse(jsonString);\r\nexport const stringifyJSON = (jsonString: string) => JSON.stringify(jsonString);\r\n\r\nexport const styleToString = (style: any) => {\r\n  return Object.keys(style).reduce(\r\n    (acc, key) =>\r\n      acc +\r\n      key\r\n        .split(/(?=[A-Z])/)\r\n        .join(\"-\")\r\n        .toLowerCase() +\r\n      \":\" +\r\n      style[key] +\r\n      \";\",\r\n    \"\"\r\n  );\r\n};\r\n\r\nvar COLUMNS = \"abcdefgh\".split(\"\");\r\nfunction isObject(o: any) {\r\n  return Object.prototype.toString.call(o) === \"[object Object]\";\r\n}\r\nfunction isPlainObject(o: any) {\r\n  var ctor, prot;\r\n\r\n  if (isObject(o) === false) return false;\r\n\r\n  // If has modified constructor\r\n  ctor = o.constructor;\r\n  if (ctor === undefined) return true;\r\n\r\n  // If has modified prototype\r\n  prot = ctor.prototype;\r\n  if (isObject(prot) === false) return false;\r\n\r\n  // If constructor does not have an Object-specific method\r\n  if (prot.hasOwnProperty(\"isPrototypeOf\") === false) {\r\n    return false;\r\n  }\r\n\r\n  // Most likely a plain Object\r\n  return true;\r\n}\r\nfunction isString(s: any) {\r\n  return typeof s === \"string\";\r\n}\r\nfunction validSquare(square: any) {\r\n  return isString(square) && square.search(/^[a-h][1-8]$/) !== -1;\r\n}\r\nfunction validPieceCode(code: any) {\r\n  return isString(code) && code.search(/^[bw][KQRNBP]$/) !== -1;\r\n}\r\nfunction validPositionObject(pos: any) {\r\n  if (!isPlainObject(pos)) return false;\r\n\r\n  for (var i in pos) {\r\n    if (!pos.hasOwnProperty(i)) continue;\r\n\r\n    if (!validSquare(i) || !validPieceCode(pos[i])) {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  return true;\r\n}\r\n// convert bP, wK, etc code to FEN structure\r\nfunction pieceCodeToFen(piece: string) {\r\n  var pieceCodeLetters = piece.split(\"\");\r\n\r\n  // white piece\r\n  if (pieceCodeLetters[0] === \"w\") {\r\n    return pieceCodeLetters[1].toUpperCase();\r\n  }\r\n\r\n  // black piece\r\n  return pieceCodeLetters[1].toLowerCase();\r\n}\r\n// convert FEN piece code to bP, wK, etc\r\nfunction fenToPieceCode(piece: string) {\r\n  // black piece\r\n  if (piece.toLowerCase() === piece) {\r\n    return \"b\" + piece.toUpperCase();\r\n  }\r\n\r\n  // white piece\r\n  return \"w\" + piece.toUpperCase();\r\n}\r\nfunction squeezeFenEmptySquares(fen: string) {\r\n  return fen\r\n    .replace(/11111111/g, \"8\")\r\n    .replace(/1111111/g, \"7\")\r\n    .replace(/111111/g, \"6\")\r\n    .replace(/11111/g, \"5\")\r\n    .replace(/1111/g, \"4\")\r\n    .replace(/111/g, \"3\")\r\n    .replace(/11/g, \"2\");\r\n}\r\nfunction expandFenEmptySquares(fen: string) {\r\n  return fen\r\n    .replace(/8/g, \"11111111\")\r\n    .replace(/7/g, \"1111111\")\r\n    .replace(/6/g, \"111111\")\r\n    .replace(/5/g, \"11111\")\r\n    .replace(/4/g, \"1111\")\r\n    .replace(/3/g, \"111\")\r\n    .replace(/2/g, \"11\");\r\n}\r\nfunction validFen(fen: any) {\r\n  if (!isString(fen)) return false;\r\n\r\n  // cut off any move, castling, etc info from the end\r\n  // we're only interested in position information\r\n  fen = fen.replace(/ .+$/, \"\");\r\n\r\n  // expand the empty square numbers to just 1s\r\n  fen = expandFenEmptySquares(fen);\r\n\r\n  // FEN should be 8 sections separated by slashes\r\n  var chunks = fen.split(\"/\");\r\n  if (chunks.length !== 8) return false;\r\n\r\n  // check each section\r\n  for (var i = 0; i < 8; i++) {\r\n    if (chunks[i].length !== 8 || chunks[i].search(/[^kqrnbpKQRNBP1]/) !== -1) {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  return true;\r\n}\r\n\r\nexport const objToFen = (obj: any) => {\r\n  if (!validPositionObject(obj)) return false;\r\n\r\n  var fen = \"\";\r\n\r\n  var currentRow = 8;\r\n  for (var i = 0; i < 8; i++) {\r\n    for (var j = 0; j < 8; j++) {\r\n      var square = COLUMNS[j] + currentRow;\r\n\r\n      // piece exists\r\n      if (obj.hasOwnProperty(square)) {\r\n        fen = fen + pieceCodeToFen(obj[square]);\r\n      } else {\r\n        // empty space\r\n        fen = fen + \"1\";\r\n      }\r\n    }\r\n\r\n    if (i !== 7) {\r\n      fen = fen + \"/\";\r\n    }\r\n\r\n    currentRow = currentRow - 1;\r\n  }\r\n\r\n  // squeeze the empty numbers together\r\n  fen = squeezeFenEmptySquares(fen);\r\n\r\n  return fen;\r\n};\r\n// convert FEN string to position object\r\n// returns false if the FEN string is invalid\r\nexport const fenToObj = (fen: any) => {\r\n  if (!validFen(fen)) return false;\r\n\r\n  // cut off any move, castling, etc info from the end\r\n  // we're only interested in position information\r\n  fen = fen.replace(/ .+$/, \"\");\r\n\r\n  var rows = fen.split(\"/\");\r\n  var position: any = {};\r\n\r\n  var currentRow = 8;\r\n  for (var i = 0; i < 8; i++) {\r\n    var row = rows[i].split(\"\");\r\n    var colIdx = 0;\r\n\r\n    // loop through each character in the FEN section\r\n    for (var j = 0; j < row.length; j++) {\r\n      // number / empty squares\r\n      if (row[j].search(/[1-8]/) !== -1) {\r\n        var numEmptySquares = parseInt(row[j], 10);\r\n        colIdx = colIdx + numEmptySquares;\r\n      } else {\r\n        // piece\r\n        var square = COLUMNS[colIdx] + currentRow;\r\n        position[square] = fenToPieceCode(row[j]);\r\n        colIdx = colIdx + 1;\r\n      }\r\n    }\r\n\r\n    currentRow = currentRow - 1;\r\n  }\r\n\r\n  return position;\r\n};\r\n","export const BOARD_MOVE_UPDATE = \"BOARD_MOVE_UPDATE\";\r\nexport const BOARD_MOVE_UNDO = \"BOARD_MOVE_UNDO\";\r\n","import { useEffect, useState } from \"react\";\r\nimport {\r\n  ChessInstance,\r\n  Move,\r\n  Piece,\r\n  PieceType,\r\n  ShortMove,\r\n  Square,\r\n} from \"chess.js\";\r\nimport {\r\n  Color,\r\n  Dests,\r\n  Key,\r\n  MoveMetadata,\r\n  Role,\r\n  SetPremoveMetadata,\r\n  Elements,\r\n} from \"chessground/types\";\r\nimport { parseJSON } from \"../utils/utils\";\r\nimport {\r\n  BOARD_MOVE_UNDO,\r\n  BOARD_MOVE_UPDATE,\r\n} from \"../constants/chessMultiplayerMsgTypes\";\r\n\r\nconst Chess = require(\"chess.js\");\r\n\r\ninterface IMovable {\r\n  free?: boolean; // all moves are valid - board editor\r\n  color?: Color | \"both\"; // color that can move. white | black | both | undefined\r\n  dests?: Dests; // valid moves. {\"a2\" [\"a3\" \"a4\"] \"b1\" [\"a3\" \"c3\"]}\r\n  showDests?: boolean; // whether to add the move-dest class on squares\r\n  events?: {\r\n    after?: (orig: Key, dest: Key, metadata: MoveMetadata) => void; // called after the move has been played\r\n    afterNewPiece?: (role: Role, key: Key, metadata: MoveMetadata) => void; // called after a new piece is dropped on the board\r\n  };\r\n  rookCastle?: boolean; // castle by moving the king to the rook\r\n}\r\n\r\ninterface IDraggable {\r\n  enabled?: boolean; // allow moves & premoves to use drag'n drop\r\n  distance?: number; // minimum distance to initiate a drag; in pixels\r\n  autoDistance?: boolean; // lets chessground set distance to zero when user drags pieces\r\n  showGhost?: boolean; // show ghost of piece being dragged\r\n  deleteOnDropOff?: boolean; // delete a piece when it is dropped off the board\r\n}\r\n\r\ninterface IPremovable {\r\n  enabled?: boolean; // allow premoves for color that can not move\r\n  showDests?: boolean; // whether to add the premove-dest class on squares\r\n  castle?: boolean; // whether to allow king castle premoves\r\n  dests?: Key[]; // premove destinations for the current selection\r\n  events?: {\r\n    set?: (orig: Key, dest: Key, metadata?: SetPremoveMetadata) => void; // called after the premove has been set\r\n    unset?: () => void; // called after the premove has been unset\r\n  };\r\n}\r\ninterface IPredroppable {\r\n  enabled?: boolean; // allow predrops for color that can not move\r\n  events?: {\r\n    set?: (role: Role, key: Key) => void; // called after the predrop has been set\r\n    unset?: () => void; // called after the predrop has been unset\r\n  };\r\n}\r\ninterface IEvents {\r\n  change?: () => void; // called after the situation changes on the board\r\n  // called after a piece has been moved.\r\n  // capturedPiece is undefined or like {color: 'white'; 'role': 'queen'}\r\n  move?: (orig: Key, dest: Key, capturedPiece?: Piece) => void;\r\n  dropNewPiece?: (piece: Piece, key: Key) => void;\r\n  select?: (key: Key) => void; // called when a square is selected\r\n  insert?: (elements: Elements) => void; // when the board DOM has been (re)inserted\r\n}\r\n\r\nconst useChess = (Agora: any, Multiplayer: any) => {\r\n  const [chess] = useState<ChessInstance>(\r\n    new Chess(\"rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1\")\r\n  );\r\n  const [state, setState] = useState<{\r\n    fen: string;\r\n    dropSquareStyle: any;\r\n    squareStyles: any;\r\n    pieceSquare: any;\r\n    square: string;\r\n    history: Move[];\r\n    boardPosition: any;\r\n    pgn: any;\r\n    undoMovesArray: Move[];\r\n  }>({\r\n    fen: \"start\",\r\n    // square styles for active drop square\r\n    dropSquareStyle: {},\r\n    // custom square styles\r\n    squareStyles: {},\r\n    // square with the currently clicked piece\r\n    pieceSquare: \"\",\r\n    // currently clicked square\r\n    square: \"\",\r\n    // array of past game moves\r\n    history: [],\r\n    boardPosition: {},\r\n    pgn: [],\r\n    undoMovesArray: [],\r\n  });\r\n\r\n  // useEffect(() => {\r\n  //   console.log(\"PGN: \", state.pgn);\r\n  // }, [state.pgn]);\r\n\r\n  useEffect(() => {\r\n    console.log(\"UNDO MOVES: \", state.undoMovesArray);\r\n  }, [state.undoMovesArray]);\r\n\r\n  useEffect(() => {\r\n    if (Agora.channel) {\r\n      Agora.channel?.on(\"ChannelMessage\", (message: any) => {\r\n        const data = parseJSON(message.text);\r\n        // console.log(\"MESSAGE DATA: \", data);\r\n        switch (data.type) {\r\n          case BOARD_MOVE_UPDATE:\r\n            onDrop({\r\n              sourceSquare: data.json.move.from,\r\n              targetSquare: data.json.move.to,\r\n            });\r\n            break;\r\n          case BOARD_MOVE_UNDO:\r\n            const parametersObj = {\r\n              chess,\r\n              state,\r\n              setState,\r\n              undoArray: data.json.undoArray,\r\n            };\r\n            Multiplayer.undoMove(parametersObj);\r\n            break;\r\n          default:\r\n            console.log(\"INVALID OPERATION\");\r\n            break;\r\n        }\r\n      });\r\n    }\r\n  }, [Agora.channel]);\r\n\r\n  const setBoardPosition = (position: any) => {\r\n    console.log(\"BOARD POSITION: \", position);\r\n    setState({\r\n      ...state,\r\n      boardPosition: position,\r\n    });\r\n  };\r\n\r\n  const promotion = (\r\n    sourceSquare: Square,\r\n    targetSquare: Square,\r\n    e?: Exclude<PieceType, \"p\" | \"k\">\r\n  ) => {\r\n    const from = sourceSquare;\r\n    const to = targetSquare;\r\n    chess.move({ from, to, promotion: e });\r\n    setState({\r\n      ...state,\r\n      fen: chess.fen(),\r\n    });\r\n    // hidePromotionModal();\r\n  };\r\n\r\n  const removeHighlightSquare = () => {\r\n    setState(({ pieceSquare, history }) => ({\r\n      ...state,\r\n      squareStyles: squareStyling({ pieceSquare, history }),\r\n    }));\r\n  };\r\n\r\n  // show possible moves\r\n  const highlightSquare = (\r\n    sourceSquare: Square,\r\n    squaresToHighlight: string[]\r\n  ) => {\r\n    const highlightStyles = [sourceSquare, ...squaresToHighlight].reduce(\r\n      (a, c) => {\r\n        return {\r\n          ...a,\r\n          ...{\r\n            [c]: {\r\n              background:\r\n                \"radial-gradient(circle, rgb(123,97,255,0.5) 20%, transparent 0%)\",\r\n              borderRadius: \"50%\",\r\n            },\r\n          },\r\n          ...squareStyling({\r\n            history: state.history,\r\n            pieceSquare: state.pieceSquare,\r\n          }),\r\n        };\r\n      },\r\n      {}\r\n    );\r\n\r\n    setState(({ squareStyles }) => ({\r\n      ...state,\r\n      squareStyles: { ...squareStyles, ...highlightStyles },\r\n    }));\r\n  };\r\n\r\n  const onMouseOutSquare = (square: Square) => removeHighlightSquare();\r\n\r\n  const onMouseOverSquare = (square: Square) => {\r\n    // get list of possible moves for this square\r\n    let moves = chess.moves({\r\n      square: square,\r\n      verbose: true,\r\n    });\r\n\r\n    // exit if there are no moves available for this square\r\n    if (moves.length === 0) return;\r\n\r\n    let squaresToHighlight = [];\r\n    for (var i = 0; i < moves.length; i++) {\r\n      squaresToHighlight.push(moves[i].to);\r\n    }\r\n    // console.log(\"SQUARESTOHIGHLIGHT: \", squaresToHighlight);\r\n    highlightSquare(square, squaresToHighlight);\r\n  };\r\n\r\n  const onDrop = ({\r\n    sourceSquare,\r\n    targetSquare,\r\n    piece,\r\n  }: {\r\n    sourceSquare: Square;\r\n    targetSquare: Square;\r\n    piece?: string;\r\n  }) => {\r\n    // see if the move is legal\r\n    let move = chess.move({\r\n      from: sourceSquare,\r\n      to: targetSquare,\r\n      // promotion: \"q\", // always promote to a queen for example simplicity\r\n    });\r\n    // console.log(\"MOVE: \", move);\r\n    const moves = chess.moves({ verbose: true });\r\n    for (let i = 0, len = moves.length; i < len; i++) {\r\n      /* eslint-disable-line */\r\n      if (\r\n        moves[i].flags.indexOf(\"p\") !== -1 &&\r\n        moves[i].from === sourceSquare\r\n      ) {\r\n        // setPendingMove([sourceSquare, targetSquare]);\r\n        // console.log(\"opening promotional modal\");\r\n        promotion(sourceSquare, targetSquare, \"r\");\r\n        // showPromotionModal();\r\n        return;\r\n      }\r\n    }\r\n\r\n    // illegal move\r\n    if (move === null) return;\r\n    setState(({ history, pieceSquare }) => ({\r\n      ...state,\r\n      fen: chess.fen(),\r\n      pgn: chess.pgn()?.split(/\\d\\./),\r\n      history: chess.history({ verbose: true }),\r\n      squareStyles: squareStyling({ pieceSquare, history }),\r\n    }));\r\n\r\n    Multiplayer.updateBoard(move);\r\n  };\r\n\r\n  const onSquareClick = (square: Square) => {\r\n    setState(({ history }) => ({\r\n      ...state,\r\n      squareStyles: squareStyling({ pieceSquare: square, history }),\r\n      pieceSquare: square,\r\n    }));\r\n    let move = chess.move({\r\n      from: state.pieceSquare,\r\n      to: square,\r\n      // promotion: \"q\", // always promote to a queen for example simplicity\r\n    });\r\n\r\n    const moves = chess.moves({ verbose: true });\r\n    for (let i = 0, len = moves.length; i < len; i++) {\r\n      /* eslint-disable-line */\r\n      if (\r\n        moves[i].flags.indexOf(\"p\") !== -1 &&\r\n        moves[i].from === state.pieceSquare\r\n      ) {\r\n        // setPendingMove([state.pieceSquare, targetSquare]);\r\n        // console.log(\"opening promotional modal\");\r\n        promotion(state.pieceSquare, square, \"r\");\r\n        // showPromotionModal();\r\n        return;\r\n      }\r\n    }\r\n\r\n    // illegal move\r\n    if (move === null) return;\r\n\r\n    setState({\r\n      ...state,\r\n      fen: chess.fen(),\r\n      pgn: chess.pgn()?.split(/\\d\\./),\r\n      history: chess.history({ verbose: true }),\r\n      pieceSquare: \"\",\r\n    });\r\n    Multiplayer.updateBoard(move);\r\n  };\r\n\r\n  // central squares get diff dropSquareStyles\r\n  const onDragOverSquare = (square: Square) => {\r\n    setState({\r\n      ...state,\r\n      dropSquareStyle:\r\n        square === \"e4\" || square === \"d4\" || square === \"e5\" || square === \"d5\"\r\n          ? { backgroundColor: \"cornFlowerBlue\" }\r\n          : { boxShadow: \"inset 0 0 1px 4px rgb(255, 255, 0)\" },\r\n    });\r\n  };\r\n\r\n  const onSquareRightClick = (square: Square) =>\r\n    setState({\r\n      ...state,\r\n      squareStyles: { [square]: { backgroundColor: \"deepPink\" } },\r\n    });\r\n\r\n  const undoMove = () => {\r\n    const undoMoveObj = chess.undo();\r\n    if (undoMoveObj) {\r\n      setState({\r\n        ...state,\r\n        fen: chess.fen(),\r\n        undoMovesArray: [...state.undoMovesArray, undoMoveObj],\r\n      });\r\n      Multiplayer.undoMoveMsg([...state.undoMovesArray, undoMoveObj]);\r\n    }\r\n  };\r\n  const redoMove = () => {\r\n    if (state.undoMovesArray.length === 0) return;\r\n    const redoMoveObj: Move | undefined = state.undoMovesArray.pop();\r\n    console.log(\"REDO: \", redoMoveObj);\r\n    if (redoMoveObj) {\r\n      const move = chess.move(redoMoveObj);\r\n      console.log(\"REDONE: \", move);\r\n      if (move !== null) {\r\n        setState(({ history, pieceSquare }) => ({\r\n          ...state,\r\n          fen: chess.fen(),\r\n          pgn: chess.pgn()?.split(/\\d\\./),\r\n          history: chess.history({ verbose: true }),\r\n          squareStyles: squareStyling({ pieceSquare, history }),\r\n          // undoMovesArray: ,\r\n        }));\r\n\r\n        Multiplayer.updateBoard(move);\r\n      }\r\n    }\r\n  };\r\n\r\n  return {\r\n    setBoardPosition,\r\n    fen: state.fen,\r\n    pgn: state.pgn,\r\n    onDrop,\r\n    onMouseOverSquare,\r\n    onMouseOutSquare,\r\n    squareStyles: state.squareStyles,\r\n    onDragOverSquare,\r\n    onSquareClick,\r\n    onSquareRightClick,\r\n    undoMove,\r\n    redoMove,\r\n  };\r\n};\r\n\r\nconst squareStyling = ({\r\n  pieceSquare,\r\n  history,\r\n}: {\r\n  pieceSquare: any;\r\n  history: any;\r\n}) => {\r\n  const sourceSquare = history.length && history[history.length - 1].from;\r\n  const targetSquare = history.length && history[history.length - 1].to;\r\n\r\n  return {\r\n    [pieceSquare]: { backgroundColor: \"rgba(123,97,255,0.5)\" },\r\n    // ...(history.length && {\r\n    //   [sourceSquare]: {\r\n    //     backgroundColor: \"rgba(123,97,255,0.5)\",\r\n    //   },\r\n    // }),\r\n    ...(history.length && {\r\n      [targetSquare]: {\r\n        backgroundColor: \"rgba(123,97,255,0.5)\",\r\n      },\r\n    }),\r\n  };\r\n};\r\n\r\nexport default useChess;\r\n\r\n// To show promotional Modal or not\r\n// const showPromotionModal = () => setPromotionModal(true);\r\n// const hidePromotionModal = () => setPromotionModal(false);\r\n\r\n// const handleMove = (move: ShortMove) => {\r\n//   const moves = chess.moves({ verbose: true });\r\n\r\n//   for (let i = 0, len = moves.length; i < len; i++) {\r\n//     /* eslint-disable-line */\r\n//     if (moves[i].flags.indexOf(\"p\") !== -1 && moves[i].from === move.from) {\r\n//       setPendingMove([move.from, move.to]);\r\n//       // showPromotionModal();\r\n//       return;\r\n//     }\r\n//   }\r\n//   const moveVerbose = chess.move(move);\r\n//   if (moveVerbose) {\r\n//     setFen(chess.fen());\r\n//     Multiplayer.updateBoard(move);\r\n//   }\r\n// };\r\n\r\n// const calcMovable = (): IMovable => {\r\n//   const dests = new Map();\r\n//   chess.SQUARES.forEach((s) => {\r\n//     const ms = chess.moves({ square: s, verbose: true });\r\n//     if (ms.length)\r\n//       dests.set(\r\n//         s,\r\n//         ms.map((m) => m.to)\r\n//       );\r\n//   });\r\n\r\n//   return {\r\n//     free: false,\r\n//     dests: dests,\r\n//     showDests: true,\r\n//     events: {\r\n//       after: (from: any, to: any, metadeta: any) => {\r\n//         // console.log(\"metadata: \", { from, to, metadeta });\r\n//         return handleMove({ from: from, to: to });\r\n//       },\r\n//       afterNewPiece: (role: Role, key: Key, metaData: MoveMetadata) => {\r\n//         console.log(\"afterNewPiece: \", role, key, metaData);\r\n//       },\r\n//     },\r\n//     rookCastle: true,\r\n//   };\r\n// };\r\n\r\n// const calcDraggable = (): IDraggable => ({\r\n//   enabled: true,\r\n//   showGhost: false,\r\n//   deleteOnDropOff: false,\r\n// });\r\n","import { stringifyJSON } from \"./utils\";\r\nimport { RtmTextMessage } from \"agora-rtm-sdk\";\r\n\r\nconst messageParser = (json: any): RtmTextMessage => ({\r\n  text: stringifyJSON(json),\r\n  messageType: \"TEXT\",\r\n});\r\n\r\nconst agoraUtils = {\r\n  messageParser,\r\n};\r\n\r\nexport default agoraUtils;\r\n","import AgoraRTM, {\r\n  RtmChannel,\r\n  RtmClient,\r\n  RtmMessage,\r\n  RtmTextMessage,\r\n} from \"agora-rtm-sdk\";\r\nimport axios from \"axios\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { parseJSON } from \"../utils/utils\";\r\nimport agoraUtils from \"../utils/agoraUtils\";\r\n\r\nconst useAgora = () => {\r\n  const [channel, setChannel] = useState<RtmChannel | null>(null);\r\n  const appId = \"f4b36b6c897e41bfaa3904d75da40777\";\r\n  const client: RtmClient | null = AgoraRTM.createInstance(appId);\r\n  let playerMeta = {\r\n    uid: (Math.floor(Math.random() * 90000) + 10000).toString(),\r\n    token: \"\",\r\n  };\r\n\r\n  useEffect(() => {\r\n    const playerLogin = async () => {\r\n      axios\r\n        .get(\r\n          `https://agoratokenserver-demo.herokuapp.com/access_token?channel=test&uid=${playerMeta.uid}`\r\n        )\r\n        .then((res: any) => {\r\n          console.log(res);\r\n          playerMeta.token = res.data?.token || \"\";\r\n          // console.log(\"LOGIN OPTIONS: \", playerMeta);\r\n          client.login(playerMeta).then(() => {\r\n            console.log(\"Login successful\");\r\n            const newChannel = client.createChannel(\"test\");\r\n            newChannel.join();\r\n            setChannel(newChannel);\r\n          });\r\n        });\r\n    };\r\n\r\n    playerLogin().then(() => {\r\n      console.log(\"integrations successful\");\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (channel) {\r\n      // channel?.on(\"ChannelMessage\", (message: any) => {\r\n      //   const data = parseJSON(message.text);\r\n      //   console.log(\"MESSAGE DATA: \", data);\r\n      // });\r\n\r\n      channel?.on(\"MemberJoined\", (memberId) => {\r\n        console.log(\"New member joined: \", memberId);\r\n      });\r\n      channel?.on(\"MemberLeft\", (memberId) => {\r\n        console.log(\"Member left: \", memberId);\r\n      });\r\n    }\r\n  }, [channel]);\r\n\r\n  const sendChannelMessage = (data: any, type: string) => {\r\n    const message = {\r\n      uid: playerMeta.uid,\r\n      json: data || {},\r\n      type: type,\r\n    };\r\n    console.log(agoraUtils.messageParser(message));\r\n    channel?.sendMessage(agoraUtils.messageParser(message)).then(() => {});\r\n  };\r\n\r\n  return { channel, playerMeta, sendChannelMessage };\r\n};\r\n\r\nexport default useAgora;\r\n","import { ChessInstance, Move, ShortMove } from \"chess.js\";\r\nimport React, { useEffect } from \"react\";\r\nimport {\r\n  BOARD_MOVE_UNDO,\r\n  BOARD_MOVE_UPDATE,\r\n} from \"../constants/chessMultiplayerMsgTypes\";\r\nimport { IMultiplayerProps } from \"../types/chessMultiplayer\";\r\nimport { parseJSON } from \"../utils/utils\";\r\n\r\ninterface IProps {\r\n  Agora: any;\r\n}\r\n\r\nconst useChessMultiplayer = (props: IProps) => {\r\n  const { Agora } = props;\r\n\r\n  const updateBoard = (move: ShortMove) => {\r\n    const updateObject = {\r\n      move: move,\r\n    };\r\n    Agora?.sendChannelMessage(updateObject, BOARD_MOVE_UPDATE);\r\n  };\r\n  const undoMoveMsg = (undoArray: Move[]) => {\r\n    const updateObject = {\r\n      undoArray: undoArray,\r\n    };\r\n    Agora?.sendChannelMessage(updateObject, BOARD_MOVE_UNDO);\r\n  };\r\n  const undoMove = ({\r\n    chess,\r\n    state,\r\n    setState,\r\n    undoArray,\r\n  }: {\r\n    chess: ChessInstance;\r\n    state: any;\r\n    setState: any;\r\n    undoArray: Move[];\r\n  }) => {\r\n    const undoMoveObj = chess.undo();\r\n    if (undoMoveObj) {\r\n      setState({\r\n        ...state,\r\n        fen: chess.fen(),\r\n        undoMovesArray: undoArray,\r\n      });\r\n    }\r\n  };\r\n\r\n  return { updateBoard, undoMoveMsg, undoMove };\r\n};\r\n\r\nexport default useChessMultiplayer;\r\n","import { useEffect, useState } from \"react\";\r\nimport {\r\n  ChessInstance,\r\n  Move,\r\n  Piece,\r\n  PieceType,\r\n  ShortMove,\r\n  Square,\r\n} from \"chess.js\";\r\nimport { objToFen, parseJSON, styleToString } from \"../utils/utils\";\r\nimport { BOARD_MOVE_UPDATE } from \"../constants/chessMultiplayerMsgTypes\";\r\n\r\nconst Chess = require(\"chess.js\");\r\n\r\nconst defaultFen = \"8/8/8/8/8/8/8/8\";\r\nconst useBoardEditor = () => {\r\n  const [chess] = useState<ChessInstance>(new Chess(defaultFen));\r\n  const [state, setState] = useState<{\r\n    fen: string;\r\n    dropSquareStyle: any;\r\n    squareStyles: any;\r\n    pieceSquare: any;\r\n    square: string;\r\n    history: Move[];\r\n    boardPosition: any;\r\n    pgn: any;\r\n  }>({\r\n    fen: defaultFen,\r\n    // square styles for active drop square\r\n    dropSquareStyle: {},\r\n    // custom square styles\r\n    squareStyles: {},\r\n    // square with the currently clicked piece\r\n    pieceSquare: \"\",\r\n    // currently clicked square\r\n    square: \"\",\r\n    // array of past game moves\r\n    history: [],\r\n    boardPosition: {},\r\n    pgn: [],\r\n  });\r\n\r\n  useEffect(() => {\r\n    console.log(\"FEN: \", state.fen);\r\n  }, [state.fen]);\r\n\r\n  //   useEffect(() => {\r\n  //     console.log(\"FEN STRING: \", objToFen(state.boardPosition));\r\n  //     setState({\r\n  //       ...state,\r\n  //       fen: objToFen(state.boardPosition) || \"\",\r\n  //     });\r\n  //   }, [state.boardPosition]);\r\n\r\n  const onDrop = ({\r\n    sourceSquare,\r\n    targetSquare,\r\n    piece,\r\n  }: {\r\n    sourceSquare: Square | string;\r\n    targetSquare: Square;\r\n    piece?: string;\r\n  }) => {\r\n    if (sourceSquare === \"spare\") {\r\n      const boardPosition = {\r\n        ...state.boardPosition,\r\n        [targetSquare]: piece,\r\n      };\r\n      setState({\r\n        ...state,\r\n        fen: objToFen(boardPosition) || state.fen,\r\n        boardPosition,\r\n      });\r\n    }\r\n  };\r\n\r\n  return {\r\n    fen: state.fen,\r\n    pgn: state.pgn,\r\n    onDrop,\r\n  };\r\n};\r\n\r\nexport default useBoardEditor;\r\n","import Styled, { css } from \"styled-components\";\r\n\r\nconst chessboardEditorSidePanelStyle = css`\r\n  background-color: #2b2b34;\r\n  width: 370px;\r\n  border-radius: 0px 16px 16px 0px;\r\n`;\r\n\r\nexport const ScChessSidePanel = Styled.div<{\r\n  editorMode: boolean;\r\n}>`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n  ${({ editorMode }) => editorMode && chessboardEditorSidePanelStyle}\r\n`;\r\n\r\nexport const GamePlayPanel1 = Styled.div`\r\n  div {\r\n    padding: 14px;\r\n    cursor: pointer;\r\n  }\r\n`;\r\nexport const GamePlayPanel2 = Styled.div`\r\n  div {\r\n      padding: 14px;\r\n      cursor: pointer;\r\n    }\r\n`;\r\n\r\nconst chessboardEditorModeStyle = css`\r\n  div[class$=\"-spare-pieces\"] {\r\n    position: absolute;\r\n    width: 270px;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    div[data-testid^=\"spare-\"]:nth-child(odd) {\r\n      background: #b7c0d8;\r\n    }\r\n    div[data-testid^=\"spare-\"]:nth-child(even) {\r\n      background: #e8edf9;\r\n    }\r\n    div {\r\n      width: 100%;\r\n      margin: 2px;\r\n      border-radius: 12px;\r\n      div {\r\n        img {\r\n          padding: 10px 12px;\r\n          width: 26px !important;\r\n          height: 28px !important;\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const ScChessInterface = Styled.div<{\r\n  dimension: number | undefined;\r\n  editorMode?: boolean;\r\n}>`\r\n  display: flex;\r\n  /* width: 1000px; */\r\n  /* height: fit-content; */\r\n  max-width: 1440px;\r\n  background: black;\r\n  grid-template-columns: 66% 37%;\r\n  grid-template-areas: \"board sidePanel\";\r\n  .board-container {\r\n    position:relative;\r\n    min-width: 500px;\r\n    min-height: 500px;\r\n    grid-area: board;\r\n    border: 10px solid rgba(255, 255, 255);\r\n    div {\r\n      ${({ editorMode }) => editorMode && chessboardEditorModeStyle}\r\n      .black-spare-pieces {\r\n        left: ${(props) =>\r\n          props.dimension ? `${props.dimension + 20}px` : \"0px\"};\r\n\r\n        /* background:grey; */\r\n      }\r\n      .white-spare-pieces {\r\n        left: ${(props) =>\r\n          props.dimension ? `${props.dimension + 20}px` : \"0px\"};\r\n        bottom: ${(props) =>\r\n          props.dimension ? `${props.dimension - 120}px` : \"0px\"};\r\n        /* background:grey; */\r\n      }\r\n    }  \r\n  }\r\n  \r\n  ${ScChessSidePanel} {\r\n    grid-area: sidePanel;\r\n    /* width: 100%; */\r\n    /* height: 100%; */\r\n  ${GamePlayPanel1}, ${GamePlayPanel2} {\r\n    background: #2b2b34;\r\n    border: 2px solid rgba(255, 255, 255, 0.1);\r\n    border-radius: 0 8px 8px 0;\r\n  }\r\n}\r\n`;\r\n\r\nexport const ScChessPgn = Styled.div`\r\n  color: white;\r\n`;\r\n","export default __webpack_public_path__ + \"static/media/undoMove.586eb02f.svg\";","export default __webpack_public_path__ + \"static/media/redoMove.c6f42448.svg\";","export default __webpack_public_path__ + \"static/media/history.8223d0ff.svg\";","export default __webpack_public_path__ + \"static/media/resetBoard.7af0fcde.svg\";","export default __webpack_public_path__ + \"static/media/flipBoard.c1ef8478.svg\";","export default __webpack_public_path__ + \"static/media/loadGame.28f8774a.svg\";","export default __webpack_public_path__ + \"static/media/wK.3b342df8.svg\";","export default __webpack_public_path__ + \"static/media/wQ.785db365.svg\";","export default __webpack_public_path__ + \"static/media/wB.56f72474.svg\";","export default __webpack_public_path__ + \"static/media/wR.33cf0258.svg\";","export default __webpack_public_path__ + \"static/media/wN.d5fa39eb.svg\";","export default __webpack_public_path__ + \"static/media/wP.5f74a9fe.svg\";","export default __webpack_public_path__ + \"static/media/bK.e57316c7.svg\";","export default __webpack_public_path__ + \"static/media/bQ.c21470b8.svg\";","export default __webpack_public_path__ + \"static/media/bB.1f023e3e.svg\";","export default __webpack_public_path__ + \"static/media/bR.2724e583.svg\";","export default __webpack_public_path__ + \"static/media/bN.a46c4723.svg\";","export default __webpack_public_path__ + \"static/media/bP.d9262a65.svg\";","import React, { useEffect, useState } from \"react\";\r\nimport NativeChessboard from \"chessboardjsx\";\r\nimport useChess from \"../../hooks/useChess\";\r\nimport useAgora from \"../../hooks/useAgora\";\r\nimport useChessMultiplayer from \"../../hooks/useChessMultiplayer\";\r\nimport useBoardEditor from \"../../hooks/useBoardEditor\";\r\nimport { IChessboardProps } from \"../../types/chessboardTypes\";\r\nimport {\r\n  ScChessPgn,\r\n  ScChessInterface,\r\n  ScChessSidePanel,\r\n  GamePlayPanel1,\r\n  GamePlayPanel2,\r\n} from \"../_StyledComponent/StyledComponent\";\r\nimport undoIcon from \"../../assets/images/sidePanelIcons/undoMove.svg\";\r\nimport redoIcon from \"../../assets/images/sidePanelIcons/redoMove.svg\";\r\nimport historyIcon from \"../../assets/images/sidePanelIcons/history.svg\";\r\nimport resetIcon from \"../../assets/images/sidePanelIcons/resetBoard.svg\";\r\nimport flipIcon from \"../../assets/images/sidePanelIcons/flipBoard.svg\";\r\nimport loadIcon from \"../../assets/images/sidePanelIcons/loadGame.svg\";\r\nimport wK from \"../../assets/images/chessPieces/wK.svg\";\r\nimport wQ from \"../../assets/images/chessPieces/wQ.svg\";\r\nimport wB from \"../../assets/images/chessPieces/wB.svg\";\r\nimport wR from \"../../assets/images/chessPieces/wR.svg\";\r\nimport wN from \"../../assets/images/chessPieces/wN.svg\";\r\nimport wP from \"../../assets/images/chessPieces/wP.svg\";\r\nimport bK from \"../../assets/images/chessPieces/bK.svg\";\r\nimport bQ from \"../../assets/images/chessPieces/bQ.svg\";\r\nimport bB from \"../../assets/images/chessPieces/bB.svg\";\r\nimport bR from \"../../assets/images/chessPieces/bR.svg\";\r\nimport bN from \"../../assets/images/chessPieces/bN.svg\";\r\nimport bP from \"../../assets/images/chessPieces/bP.svg\";\r\n// import Chessboard from \"../Chessboard/Chessboard\";\r\n\r\ninterface Props {}\r\n\r\ninterface ICustomPieceProps {\r\n  squareWidth: number;\r\n  isDragging: boolean;\r\n}\r\n\r\nconst SidePanelMenu = ({\r\n  undoMove,\r\n  redoMove,\r\n}: {\r\n  undoMove: any;\r\n  redoMove: any;\r\n}) => (\r\n  <>\r\n    <GamePlayPanel1>\r\n      <div onClick={undoMove}>\r\n        <img src={undoIcon} alt=\"Undo\" />\r\n      </div>\r\n      <div onClick={redoMove}>\r\n        <img src={redoIcon} alt=\"Redo\" />\r\n      </div>\r\n      <div>\r\n        <img src={historyIcon} alt=\"History\" />\r\n      </div>\r\n      <div>\r\n        <img src={resetIcon} alt=\"Reset\" />\r\n      </div>\r\n      <div>\r\n        <img src={flipIcon} alt=\"Flip\" />\r\n      </div>\r\n      {/* <div>\r\n        <ScChessPgn>\r\n          {pgn.map?.(\r\n            (move: string, index: number) =>\r\n              index !== 0 && <ScChessPgn>{`${index}. ${move}`}</ScChessPgn>\r\n          )}\r\n        </ScChessPgn>\r\n      </div> */}\r\n    </GamePlayPanel1>\r\n    <GamePlayPanel2>\r\n      <div>\r\n        <img src={loadIcon} alt=\"Load\" />\r\n      </div>\r\n    </GamePlayPanel2>\r\n  </>\r\n);\r\n\r\nconst ChessInterface = (props: Props) => {\r\n  // const Agora = useAgora();\r\n  // const AgoraChannel: RtmChannel | undefined | null = Agora.channel;\r\n  // const Multiplayer = useChessMultiplayer({\r\n  //   Agora: Agora,\r\n  // });\r\n  const [dimension, setDimension] = useState<number>();\r\n  // const [undoMove, setUndoMove] = useState<boolean>(false);\r\n  const [editorMode, setEditorMode] = useState<boolean>(false);\r\n  const [sidePanelSection, setSidePanelSection] = useState<string | undefined>(\r\n    \"menu\"\r\n  );\r\n  // const [chessboardConfig, setChessboardConfig] = useState<IChessboardProps>();\r\n\r\n  const Agora = useAgora();\r\n  const Multiplayer = useChessMultiplayer({\r\n    Agora,\r\n  });\r\n  const boardEditor = useBoardEditor();\r\n  const {\r\n    setBoardPosition,\r\n    fen,\r\n    pgn,\r\n    onDrop,\r\n    onMouseOverSquare,\r\n    onMouseOutSquare,\r\n    squareStyles,\r\n    onDragOverSquare,\r\n    onSquareClick,\r\n    onSquareRightClick,\r\n    undoMove,\r\n    redoMove,\r\n  } = useChess(Agora, Multiplayer);\r\n\r\n  useEffect(() => {\r\n    updateDimensions();\r\n    window.addEventListener(\"resize\", updateDimensions);\r\n\r\n    return () => window.removeEventListener(\"resize\", updateDimensions);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const boardContainerDiv = window.document\r\n      .getElementById(\"board-container\")\r\n      ?.querySelector<HTMLElement>(\"div\");\r\n    //   ?.querySelector(\"div\")\r\n\r\n    const firstChild = boardContainerDiv?.firstElementChild;\r\n    const lastChild = boardContainerDiv?.lastElementChild;\r\n\r\n    if (firstChild && lastChild) {\r\n      firstChild.classList.add(\"black-spare-pieces\");\r\n      lastChild.classList.add(\"white-spare-pieces\");\r\n      firstChild.setAttribute(\"style\", \"\");\r\n      lastChild.setAttribute(\"style\", \"\");\r\n    }\r\n  }, [window.document.getElementById(\"board-container\")]);\r\n\r\n  // const toggleUndoMove = () => setUndoMove(!undoMove);\r\n\r\n  const updateDimensions = () => {\r\n    setDimension(\r\n      window.document.getElementById(\"board-container\")?.clientWidth\r\n    );\r\n  };\r\n\r\n  const customPieces = {\r\n    wK: ({ squareWidth, isDragging }: ICustomPieceProps) => (\r\n      <img\r\n        style={{\r\n          width: squareWidth,\r\n          height: squareWidth,\r\n        }}\r\n        src={wK}\r\n        alt={\"wK\"}\r\n      />\r\n    ),\r\n    wQ: ({ squareWidth, isDragging }: ICustomPieceProps) => (\r\n      <img\r\n        style={{\r\n          width: squareWidth,\r\n          height: squareWidth,\r\n        }}\r\n        src={wQ}\r\n        alt={\"wQ\"}\r\n      />\r\n    ),\r\n    wB: ({ squareWidth, isDragging }: ICustomPieceProps) => (\r\n      <img\r\n        style={{\r\n          width: squareWidth,\r\n          height: squareWidth,\r\n        }}\r\n        src={wB}\r\n        alt={\"wB\"}\r\n      />\r\n    ),\r\n    wR: ({ squareWidth, isDragging }: ICustomPieceProps) => (\r\n      <img\r\n        style={{\r\n          width: squareWidth,\r\n          height: squareWidth,\r\n        }}\r\n        src={wR}\r\n        alt={\"wR\"}\r\n      />\r\n    ),\r\n    wN: ({ squareWidth, isDragging }: ICustomPieceProps) => (\r\n      <img\r\n        style={{\r\n          width: squareWidth,\r\n          height: squareWidth,\r\n        }}\r\n        src={wN}\r\n        alt={\"wN\"}\r\n      />\r\n    ),\r\n    wP: ({ squareWidth, isDragging }: ICustomPieceProps) => (\r\n      <img\r\n        style={{\r\n          width: squareWidth,\r\n          height: squareWidth,\r\n        }}\r\n        src={wP}\r\n        alt={\"wP\"}\r\n      />\r\n    ),\r\n\r\n    bK: ({ squareWidth, isDragging }: ICustomPieceProps) => (\r\n      <img\r\n        style={{\r\n          width: squareWidth,\r\n          height: squareWidth,\r\n        }}\r\n        src={bK}\r\n        alt={\"bK\"}\r\n      />\r\n    ),\r\n    bQ: ({ squareWidth, isDragging }: ICustomPieceProps) => (\r\n      <img\r\n        style={{\r\n          width: squareWidth,\r\n          height: squareWidth,\r\n        }}\r\n        src={bQ}\r\n        alt={\"bQ\"}\r\n      />\r\n    ),\r\n    bB: ({ squareWidth, isDragging }: ICustomPieceProps) => (\r\n      <img\r\n        style={{\r\n          width: squareWidth,\r\n          height: squareWidth,\r\n        }}\r\n        src={bB}\r\n        alt={\"bB\"}\r\n      />\r\n    ),\r\n    bR: ({ squareWidth, isDragging }: ICustomPieceProps) => (\r\n      <img\r\n        style={{\r\n          width: squareWidth,\r\n          height: squareWidth,\r\n        }}\r\n        src={bR}\r\n        alt={\"bR\"}\r\n      />\r\n    ),\r\n    bN: ({ squareWidth, isDragging }: ICustomPieceProps) => (\r\n      <img\r\n        style={{\r\n          width: squareWidth,\r\n          height: squareWidth,\r\n        }}\r\n        src={bN}\r\n        alt={\"bN\"}\r\n      />\r\n    ),\r\n    bP: ({ squareWidth, isDragging }: ICustomPieceProps) => (\r\n      <img\r\n        style={{\r\n          width: squareWidth,\r\n          height: squareWidth,\r\n        }}\r\n        src={bP}\r\n        alt={\"bP\"}\r\n      />\r\n    ),\r\n  };\r\n\r\n  let chessboardConfig: Partial<IChessboardProps> = {\r\n    id: \"board-0\",\r\n    position: editorMode ? boardEditor.fen : fen,\r\n    // position: fen,\r\n    draggable: true,\r\n    lightSquareStyle: { backgroundColor: \"#E8EDF9\" },\r\n    darkSquareStyle: { backgroundColor: \"#B7C0D8\" },\r\n    pieces: customPieces,\r\n    boardStyle: {\r\n      width: dimension,\r\n      height: dimension,\r\n      position: \"relative\",\r\n    },\r\n    width: dimension,\r\n    ...(editorMode ? { onDrop: boardEditor.onDrop } : { onDrop }),\r\n    // onDrop,\r\n    ...(!editorMode && {\r\n      getPosition: setBoardPosition,\r\n      onMouseOverSquare,\r\n      onMouseOutSquare,\r\n      squareStyles,\r\n      onDragOverSquare,\r\n      onSquareClick,\r\n      onSquareRightClick,\r\n    }),\r\n    sparePieces: editorMode,\r\n  };\r\n  return (\r\n    <ScChessInterface dimension={dimension} editorMode={editorMode}>\r\n      <div id=\"board-container\" className=\"board-container\">\r\n        <NativeChessboard {...chessboardConfig} />\r\n      </div>\r\n      {/* {!editorMode && ( */}\r\n      <ScChessSidePanel editorMode={editorMode}>\r\n        {!editorMode && (\r\n          <>\r\n            {sidePanelSection === \"menu\" && (\r\n              <SidePanelMenu undoMove={undoMove} redoMove={redoMove} />\r\n            )}\r\n          </>\r\n        )}\r\n      </ScChessSidePanel>\r\n      {/* )} */}\r\n    </ScChessInterface>\r\n  );\r\n};\r\n\r\nexport default ChessInterface;\r\n","import React from \"react\";\nimport \"./app.scss\";\nimport ChessInterface from \"./components/ChessInterface/ChessInterface\";\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <ChessInterface />\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}