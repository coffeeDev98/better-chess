{"version":3,"sources":["utils/utils.ts","constants/chessMultiplayerMsgTypes.ts","hooks/useChess.tsx","utils/agoraUtils.ts","hooks/useAgora.tsx","hooks/useChessMultiplayer.tsx","hooks/useBoardEditor.tsx","components/_StyledComponent/StyledComponent.tsx","assets/images/sidePanelIcons/undoMove.svg","assets/images/sidePanelIcons/redoMove.svg","assets/images/sidePanelIcons/history.svg","assets/images/sidePanelIcons/resetBoard.svg","assets/images/sidePanelIcons/flipBoard.svg","assets/images/sidePanelIcons/loadGame.svg","assets/images/chessPieces/wK.svg","assets/images/chessPieces/wQ.svg","assets/images/chessPieces/wB.svg","assets/images/chessPieces/wR.svg","assets/images/chessPieces/wN.svg","assets/images/chessPieces/wP.svg","assets/images/chessPieces/bK.svg","assets/images/chessPieces/bQ.svg","assets/images/chessPieces/bB.svg","assets/images/chessPieces/bR.svg","assets/images/chessPieces/bN.svg","assets/images/chessPieces/bP.svg","assets/images/arrowLeft.svg","assets/images/arrowRight.svg","components/PGNViewer/PGNViewer.tsx","components/ChessInterface/ChessInterface.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["COLUMNS","split","isObject","o","Object","prototype","toString","call","isString","s","validPositionObject","pos","ctor","prot","undefined","constructor","hasOwnProperty","isPlainObject","i","square","search","code","pieceCodeToFen","piece","pieceCodeLetters","toUpperCase","toLowerCase","objToFen","obj","fen","currentRow","j","replace","squeezeFenEmptySquares","fenToObj","chunks","expandFenEmptySquares","length","validFen","rows","position","row","colIdx","parseInt","BOARD_MOVE_UPDATE","BOARD_MOVE_UNDO","BOARD_FEN_UPDATE","BOARD_PGN_UPDATE","Chess","require","defaultFen","squareStyling","pieceSquare","history","targetSquare","from","to","backgroundColor","useChess","Agora","Multiplayer","useState","chess","promotionModal","setPromotionModal","turn","orientation","pendingMove","dropSquareStyle","squareStyles","boardPosition","pgn","undoMovesArray","state","setState","useEffect","console","log","fromEntries","URLSearchParams","window","location","entries","load","in_check","inCheck","channel","on","message","jsonString","data","text","JSON","parse","type","onDrop","sourceSquare","json","move","load_pgn","parametersObj","undoArray","undoMove","showPromotionModal","checkedKingPos","keys","find","key","moves","verbose","len","flags","includes","fens","forEach","m","push","undo","setBoardPosition","reset","flip","onMouseOverSquare","squaresToHighlight","highlightStyles","reduce","a","c","background","borderRadius","highlightSquare","onMouseOutSquare","currKingPieceSquare","removeHighlightSquare","onDragOverSquare","boxShadow","onSquareClick","updateBoard","onSquareRightClick","undoMoveObj","undoMoveMsg","redoMove","redoMoveObj","pop","promotion","e","agoraUtils","messageParser","stringify","messageType","useAgora","setChannel","client","AgoraRTM","createInstance","playerMeta","uid","Math","floor","random","token","axios","get","then","res","login","newChannel","createChannel","join","playerLogin","memberId","sendChannelMessage","sendMessage","useChessMultiplayer","props","updateObject","updateBoardFen","updateBoardPgn","emptyBoardFen","useBoardEditor","filter","setFenPosition","fenString","clear","chessboardEditorSidePanelStyle","css","ScChessSidePanel","styled","div","editorMode","GamePlayPanel1","GamePlayPanel2","ScChessHistoryPanel","ScSidePanelNav","EditorSidePanel","chessboardEditorModeStyle","ScPromotionModal","ScChessInterface","dimension","PGNViewer","mode","pgnConfig","timerTime","startPlay","item","showResult","boardSize","showFen","showCoords","figurine","movesHeight","id","mutationCallback","mutationsList","observer","document","getElementById","click","innerHTML","movesDiv","MutationObserver","observe","attributes","childList","subtree","useLayoutEffect","pgnView","pgnEdit","pgnPrint","areEqual","prevProps","nextProps","React","memo","SidePanelMenu","setSidePanelSection","onClick","src","undoIcon","alt","redoIcon","historyIcon","resetIcon","flipIcon","loadIcon","ChessInterface","firstChild","lastChild","setDimension","sidePanelSection","boardEditor","updateDimensions","addEventListener","removeEventListener","boardContainerDiv","querySelector","firstElementChild","lastElementChild","classList","add","setAttribute","clientWidth","customPieces","wK","squareWidth","isDragging","style","width","height","wQ","wB","wR","wN","wP","bK","bQ","bB","bR","bN","bP","chessboardConfig","dropOffBoard","draggable","lightSquareStyle","darkSquareStyle","pieces","boardStyle","getPosition","sparePieces","renderPromotionModal","className","htmlFor","name","value","onChange","target","arrowLeft","arrowRight","renderSidePanel","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.a1ebf47f.chunk.js","sourcesContent":["export const parseJSON = (jsonString: string) => JSON.parse(jsonString);\nexport const stringifyJSON = (jsonString: string) => JSON.stringify(jsonString);\n\nexport const styleToString = (style: any) => {\n  return Object.keys(style).reduce(\n    (acc, key) =>\n      acc +\n      key\n        .split(/(?=[A-Z])/)\n        .join(\"-\")\n        .toLowerCase() +\n      \":\" +\n      style[key] +\n      \";\",\n    \"\"\n  );\n};\n\nvar COLUMNS = \"abcdefgh\".split(\"\");\nfunction isObject(o: any) {\n  return Object.prototype.toString.call(o) === \"[object Object]\";\n}\nfunction isPlainObject(o: any) {\n  var ctor, prot;\n\n  if (isObject(o) === false) return false;\n\n  // If has modified constructor\n  ctor = o.constructor;\n  if (ctor === undefined) return true;\n\n  // If has modified prototype\n  prot = ctor.prototype;\n  if (isObject(prot) === false) return false;\n\n  // If constructor does not have an Object-specific method\n  if (prot.hasOwnProperty(\"isPrototypeOf\") === false) {\n    return false;\n  }\n\n  // Most likely a plain Object\n  return true;\n}\nfunction isString(s: any) {\n  return typeof s === \"string\";\n}\nfunction validSquare(square: any) {\n  return isString(square) && square.search(/^[a-h][1-8]$/) !== -1;\n}\nfunction validPieceCode(code: any) {\n  return isString(code) && code.search(/^[bw][KQRNBP]$/) !== -1;\n}\nfunction validPositionObject(pos: any) {\n  if (!isPlainObject(pos)) return false;\n\n  for (var i in pos) {\n    if (!pos.hasOwnProperty(i)) continue;\n\n    if (!validSquare(i) || !validPieceCode(pos[i])) {\n      return false;\n    }\n  }\n\n  return true;\n}\n// convert bP, wK, etc code to FEN structure\nfunction pieceCodeToFen(piece: string) {\n  var pieceCodeLetters = piece.split(\"\");\n\n  // white piece\n  if (pieceCodeLetters[0] === \"w\") {\n    return pieceCodeLetters[1].toUpperCase();\n  }\n\n  // black piece\n  return pieceCodeLetters[1].toLowerCase();\n}\n// convert FEN piece code to bP, wK, etc\nfunction fenToPieceCode(piece: string) {\n  // black piece\n  if (piece.toLowerCase() === piece) {\n    return \"b\" + piece.toUpperCase();\n  }\n\n  // white piece\n  return \"w\" + piece.toUpperCase();\n}\nfunction squeezeFenEmptySquares(fen: string) {\n  return fen\n    .replace(/11111111/g, \"8\")\n    .replace(/1111111/g, \"7\")\n    .replace(/111111/g, \"6\")\n    .replace(/11111/g, \"5\")\n    .replace(/1111/g, \"4\")\n    .replace(/111/g, \"3\")\n    .replace(/11/g, \"2\");\n}\nfunction expandFenEmptySquares(fen: string) {\n  return fen\n    .replace(/8/g, \"11111111\")\n    .replace(/7/g, \"1111111\")\n    .replace(/6/g, \"111111\")\n    .replace(/5/g, \"11111\")\n    .replace(/4/g, \"1111\")\n    .replace(/3/g, \"111\")\n    .replace(/2/g, \"11\");\n}\nfunction validFen(fen: any) {\n  if (!isString(fen)) return false;\n\n  // cut off any move, castling, etc info from the end\n  // we're only interested in position information\n  fen = fen.replace(/ .+$/, \"\");\n\n  // expand the empty square numbers to just 1s\n  fen = expandFenEmptySquares(fen);\n\n  // FEN should be 8 sections separated by slashes\n  var chunks = fen.split(\"/\");\n  if (chunks.length !== 8) return false;\n\n  // check each section\n  for (var i = 0; i < 8; i++) {\n    if (chunks[i].length !== 8 || chunks[i].search(/[^kqrnbpKQRNBP1]/) !== -1) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nexport const objToFen = (obj: any) => {\n  if (!validPositionObject(obj)) return false;\n\n  var fen = \"\";\n\n  var currentRow = 8;\n  for (var i = 0; i < 8; i++) {\n    for (var j = 0; j < 8; j++) {\n      var square = COLUMNS[j] + currentRow;\n\n      // piece exists\n      if (obj.hasOwnProperty(square)) {\n        fen = fen + pieceCodeToFen(obj[square]);\n      } else {\n        // empty space\n        fen = fen + \"1\";\n      }\n    }\n\n    if (i !== 7) {\n      fen = fen + \"/\";\n    }\n\n    currentRow = currentRow - 1;\n  }\n\n  // squeeze the empty numbers together\n  fen = squeezeFenEmptySquares(fen);\n\n  return fen;\n};\n// convert FEN string to position object\n// returns false if the FEN string is invalid\nexport const fenToObj = (fen: any) => {\n  if (!validFen(fen)) return false;\n\n  // cut off any move, castling, etc info from the end\n  // we're only interested in position information\n  fen = fen.replace(/ .+$/, \"\");\n\n  var rows = fen.split(\"/\");\n  var position: any = {};\n\n  var currentRow = 8;\n  for (var i = 0; i < 8; i++) {\n    var row = rows[i].split(\"\");\n    var colIdx = 0;\n\n    // loop through each character in the FEN section\n    for (var j = 0; j < row.length; j++) {\n      // number / empty squares\n      if (row[j].search(/[1-8]/) !== -1) {\n        var numEmptySquares = parseInt(row[j], 10);\n        colIdx = colIdx + numEmptySquares;\n      } else {\n        // piece\n        var square = COLUMNS[colIdx] + currentRow;\n        position[square] = fenToPieceCode(row[j]);\n        colIdx = colIdx + 1;\n      }\n    }\n\n    currentRow = currentRow - 1;\n  }\n\n  return position;\n};\n","export const BOARD_MOVE_UPDATE = \"BOARD_MOVE_UPDATE\";\nexport const BOARD_MOVE_UNDO = \"BOARD_MOVE_UNDO\";\nexport const BOARD_FEN_UPDATE = \"BOARD_FEN_UPDATE\";\nexport const BOARD_PGN_UPDATE = \"BOARD_PGN_UPDATE\";\n","import { ChangeEvent, useEffect, useState } from \"react\";\nimport {\n  ChessInstance,\n  Move,\n  Piece,\n  PieceType,\n  ShortMove,\n  Square,\n} from \"chess.js\";\nimport {\n  Color,\n  Dests,\n  Key,\n  MoveMetadata,\n  Role,\n  SetPremoveMetadata,\n  Elements,\n} from \"chessground/types\";\nimport { fenToObj, parseJSON } from \"../utils/utils\";\nimport {\n  BOARD_FEN_UPDATE,\n  BOARD_MOVE_UNDO,\n  BOARD_MOVE_UPDATE,\n  BOARD_PGN_UPDATE,\n} from \"../constants/chessMultiplayerMsgTypes\";\n\nconst Chess = require(\"chess.js\");\n// const ChessES6 = require(\"../packages/chess-es6/src/chess.js\");\n// const Chess = require(\"../packages/chess-es6.js/src/chess.js\");\n// const Chess = require(\"../packages/chess.js/chess.js\");\ninterface IMovable {\n  free?: boolean; // all moves are valid - board editor\n  color?: Color | \"both\"; // color that can move. white | black | both | undefined\n  dests?: Dests; // valid moves. {\"a2\" [\"a3\" \"a4\"] \"b1\" [\"a3\" \"c3\"]}\n  showDests?: boolean; // whether to add the move-dest class on squares\n  events?: {\n    after?: (orig: Key, dest: Key, metadata: MoveMetadata) => void; // called after the move has been played\n    afterNewPiece?: (role: Role, key: Key, metadata: MoveMetadata) => void; // called after a new piece is dropped on the board\n  };\n  rookCastle?: boolean; // castle by moving the king to the rook\n}\n\ninterface IDraggable {\n  enabled?: boolean; // allow moves & premoves to use drag'n drop\n  distance?: number; // minimum distance to initiate a drag; in pixels\n  autoDistance?: boolean; // lets chessground set distance to zero when user drags pieces\n  showGhost?: boolean; // show ghost of piece being dragged\n  deleteOnDropOff?: boolean; // delete a piece when it is dropped off the board\n}\n\ninterface IPremovable {\n  enabled?: boolean; // allow premoves for color that can not move\n  showDests?: boolean; // whether to add the premove-dest class on squares\n  castle?: boolean; // whether to allow king castle premoves\n  dests?: Key[]; // premove destinations for the current selection\n  events?: {\n    set?: (orig: Key, dest: Key, metadata?: SetPremoveMetadata) => void; // called after the premove has been set\n    unset?: () => void; // called after the premove has been unset\n  };\n}\ninterface IPredroppable {\n  enabled?: boolean; // allow predrops for color that can not move\n  events?: {\n    set?: (role: Role, key: Key) => void; // called after the predrop has been set\n    unset?: () => void; // called after the predrop has been unset\n  };\n}\ninterface IEvents {\n  change?: () => void; // called after the situation changes on the board\n  // called after a piece has been moved.\n  // capturedPiece is undefined or like {color: 'white'; 'role': 'queen'}\n  move?: (orig: Key, dest: Key, capturedPiece?: any) => void;\n  dropNewPiece?: (piece: any, key: Key) => void;\n  select?: (key: Key) => void; // called when a square is selected\n  insert?: (elements: Elements) => void; // when the board DOM has been (re)inserted\n}\n\nconst defaultFen = \"rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1\";\n\nconst useChess = (Agora: any, Multiplayer: any) => {\n  const [chess] = useState<any>(new Chess(defaultFen));\n  // const [game] = useState<any>(new ChessES6(defaultFen));\n  const [promotionModal, setPromotionModal] = useState<boolean>(false);\n  const [state, setState] = useState<{\n    turn: \"w\" | \"b\";\n    fen: string;\n    orientation: \"white\" | \"black\";\n    pendingMove: { sourceSquare: any; targetSquare: any } | undefined;\n    dropSquareStyle: any;\n    squareStyles: any;\n    pieceSquare: any;\n    square: string;\n    history: any[];\n    boardPosition: any;\n    pgn: string;\n    undoMovesArray: any[];\n  }>({\n    turn: chess.turn() || \"w\",\n    fen: \"start\",\n    orientation: \"white\",\n    pendingMove: undefined,\n    // square styles for active drop square\n    dropSquareStyle: {},\n    // custom square styles\n    squareStyles: {},\n    // square with the currently clicked piece\n    pieceSquare: \"\",\n    // currently clicked square\n    square: \"\",\n    // array of past game moves\n    history: [],\n    boardPosition: {},\n    pgn: \"\",\n    undoMovesArray: [],\n  });\n\n  // useEffect(() => {\n  //   console.log(\"SQUARE_STYLES: \", state.squareStyles);\n  // }, [state.squareStyles]);\n  useEffect(() => {\n    console.log(\n      \"FEN: \",\n      Object.fromEntries(new URLSearchParams(window.location.search).entries())\n        .fen\n    );\n    if (\n      chess &&\n      Object.fromEntries(new URLSearchParams(window.location.search).entries())\n        .fen\n    ) {\n      chess.load(\n        Object.fromEntries(\n          new URLSearchParams(window.location.search).entries()\n        ).fen\n      );\n      // game.loadFen(\n      //   Object.fromEntries(\n      //     new URLSearchParams(window.location.search).entries()\n      //   ).fen\n      // );\n      setState({\n        ...state,\n        fen: Object.fromEntries(\n          new URLSearchParams(window.location.search).entries()\n        ).fen,\n      });\n    }\n  }, [chess]);\n\n  useEffect(() => {\n    console.log(\n      \"POSITION: \",\n      state.boardPosition,\n      chess.in_check(),\n      chess.turn()\n    );\n    chess.in_check() && inCheck(chess.turn());\n  }, [state.boardPosition]);\n\n  useEffect(() => {\n    console.log(\"UNDO MOVES: \", state.undoMovesArray);\n  }, [state.undoMovesArray]);\n\n  useEffect(() => {\n    if (Agora.channel) {\n      Agora.channel?.on(\"ChannelMessage\", (message: any) => {\n        const data = parseJSON(message.text);\n        // console.log(\"MESSAGE DATA: \", data);\n        switch (data.type) {\n          case BOARD_MOVE_UPDATE:\n            onDrop({\n              sourceSquare: data.json.move.from,\n              targetSquare: data.json.move.to,\n            });\n            break;\n          case BOARD_FEN_UPDATE:\n            console.log(\"PGNPRING_LOADINGFEN...\");\n            chess.load(data.json.fen);\n            // game.loadFen(data.json.fen);\n            console.log(\"PGNPRINT_FENUPDATE: \", data.json.fen);\n            setState({ ...state, fen: data.json.fen });\n            break;\n          case BOARD_PGN_UPDATE:\n            console.log(\"PGNPRING_LOADINGPGN...\", data);\n            chess.load_pgn(data.json.pgn);\n            // game.loadPgn(data.json.pgn);\n            console.log(\"PGNPRINT_PGNUPDATE: \", data.json.pgn);\n            setState({ ...state, pgn: data.json.pgn, fen: chess.fen() });\n            break;\n          case BOARD_MOVE_UNDO:\n            const parametersObj = {\n              chess,\n              state,\n              setState,\n              undoArray: data.json.undoArray,\n            };\n            Multiplayer.undoMove(parametersObj);\n            break;\n          default:\n            console.log(\"INVALID OPERATION\");\n            break;\n        }\n      });\n    }\n  }, [Agora.channel]);\n  useEffect(() => {\n    console.log(\"PGN: \", state.pgn);\n  }, [state.pgn]);\n\n  const showPromotionModal = () => setPromotionModal(true);\n  const hidePromotionModal = () => setPromotionModal(false);\n\n  const setBoardPosition = (position: any) => {\n    setState({\n      ...state,\n      boardPosition: position,\n    });\n  };\n\n  const reset = () => {\n    chess.reset();\n    setState({\n      ...state,\n      fen: defaultFen,\n      boardPosition: fenToObj(defaultFen),\n    });\n  };\n\n  const flip = () => {\n    setState({\n      ...state,\n      orientation: state.orientation === \"white\" ? \"black\" : \"white\",\n    });\n  };\n\n  const removeHighlightSquare = () => {\n    const currKingPieceSquare = Object.keys(state.boardPosition).find(\n      (key: string) => state.boardPosition[key] === `${chess.turn()}K`\n    );\n    setState(({ pieceSquare, history }) => ({\n      ...state,\n      squareStyles:\n        chess.in_check() && currKingPieceSquare\n          ? { [currKingPieceSquare]: state.squareStyles[currKingPieceSquare] }\n          : squareStyling({ pieceSquare, history }),\n    }));\n  };\n\n  // show possible moves\n  const highlightSquare = (sourceSquare: any, squaresToHighlight: string[]) => {\n    const highlightStyles = [sourceSquare, ...squaresToHighlight].reduce(\n      (a, c) => {\n        return {\n          ...a,\n          ...{\n            [c]: {\n              background:\n                \"radial-gradient(circle, rgb(123,97,255,0.5) 20%, transparent 0%)\",\n              borderRadius: \"50%\",\n            },\n          },\n          ...squareStyling({\n            history: state.history,\n            pieceSquare: state.pieceSquare,\n          }),\n        };\n      },\n      {}\n    );\n\n    setState(({ squareStyles }) => ({\n      ...state,\n      squareStyles: { ...squareStyles, ...highlightStyles },\n    }));\n  };\n\n  const inCheck = (turn: string) => {\n    const checkedKingPos: any = Object.keys(state.boardPosition).find(\n      (key: string) => state.boardPosition[key] === `${turn}K`\n    );\n    console.log(\n      \"INCHECK: \",\n      Object.keys(state.boardPosition).find(\n        (key: string) => state.boardPosition[key] === `${turn}K`\n      )\n    );\n    setState({\n      ...state,\n      squareStyles: {\n        ...state.squareStyles,\n        [checkedKingPos]: { backgroundColor: \"red\" },\n      },\n    });\n  };\n\n  const onMouseOverSquare = (square: any) => {\n    // get list of possible moves for this square\n    const moves = chess.moves({\n      square,\n      verbose: true,\n    });\n    // const moves = game.moves({\n    //   onlyForSquare: square,\n    //   onlyAlgebraicSquares: true,\n    //   onlyDestinationSquares: true,\n    // });\n    // exit if there are no moves available for this square\n    if (moves.length === 0) return;\n\n    let squaresToHighlight = [];\n    for (const move of moves) {\n      squaresToHighlight.push(move.to);\n    }\n    console.log(\"SQUARESTOHIGHLIGHT: \", { moves, squaresToHighlight });\n    highlightSquare(square, squaresToHighlight);\n  };\n\n  const onMouseOutSquare = (square: any) => {\n    removeHighlightSquare();\n  };\n\n  const promotion = (\n    sourceSquare: any,\n    targetSquare: any,\n    e?: Exclude<any, \"p\" | \"k\">\n  ) => {\n    const from = sourceSquare;\n    const to = targetSquare;\n    chess.move({ from, to, promotion: e });\n    // game.makeMoveFromAlgebraic(from, to, e);\n    setState({\n      ...state,\n      fen: chess.fen(),\n      pendingMove: undefined,\n    });\n    hidePromotionModal();\n  };\n\n  const onDrop = ({\n    sourceSquare,\n    targetSquare,\n    piece,\n  }: {\n    sourceSquare: any;\n    targetSquare: any;\n    piece?: string;\n  }) => {\n    // see if the move is legal\n    const move = chess.move({\n      from: sourceSquare,\n      to: targetSquare,\n      // promotion: \"q\", // always promote to a queen for example simplicity\n    });\n    const moves = chess.moves({ verbose: true });\n    for (let i = 0, len = moves.length; i < len; i++) {\n      /* eslint-disable-line */\n      if (moves[i].flags.includes(\"p\") && moves[i].from === sourceSquare) {\n        setState({\n          ...state,\n          pendingMove: { sourceSquare, targetSquare },\n        });\n        showPromotionModal();\n        return;\n      }\n    }\n\n    // illegal move\n    if (move === null) return;\n\n    // console.log(\"ES6 MOVES: \", {\n    //   move: game.makeMoveFromAlgebraic(sourceSquare, targetSquare),\n    //   moves: game.moves({\n    //     onlyAlgebraicSquares: true,\n    //     onlyForSquare: sourceSquare,\n    //     onlyDestinationSquares: true,\n    //   }),\n    //   fen: game.toFen(),\n    //   pgn: game.toPgn(),\n    //   history: game.history(),\n    //   game,\n    //   header: game.header(),\n    // });\n    // game.makeMoveFromAlgebraic(sourceSquare, targetSquare);\n    setState(({ history, pieceSquare }) => ({\n      ...state,\n      turn: chess.turn(),\n      fen: chess.fen(),\n      // pgn: game.toPgn(),\n      history: chess.history({ verbose: true }),\n      squareStyles: squareStyling({ pieceSquare, history }),\n    }));\n\n    const fens: any[] = [];\n    moves.forEach((m: any) => {\n      chess.move(m);\n      fens.push(chess.fen());\n      chess.undo();\n    });\n    console.log(\"FENS: \", fens);\n    // Multiplayer.updateBoard(move);\n    // Multiplayer.updateBoardFen(chess.fen());\n    // Multiplayer.updateBoardPgn(game.toPgn());\n  };\n\n  const onSquareClick = (square: any) => {\n    setState(({ history }) => ({\n      ...state,\n      squareStyles: {\n        ...state.squareStyles,\n        ...squareStyling({ pieceSquare: square, history }),\n      },\n      pieceSquare: square,\n    }));\n    let move = chess.move({\n      from: state.pieceSquare,\n      to: square,\n      // promotion: \"q\", // always promote to a queen for example simplicity\n    });\n\n    const moves = chess.moves({ verbose: true });\n\n    for (let i = 0, len = moves.length; i < len; i++) {\n      /* eslint-disable-line */\n      if (moves[i].flags.includes(\"p\") && moves[i].from === state.pieceSquare) {\n        setState({\n          ...state,\n          pendingMove: {\n            sourceSquare: state.pieceSquare,\n            targetSquare: square,\n          },\n        });\n        // promotion(state.pieceSquare, square, \"q\");\n        showPromotionModal();\n        return;\n      }\n    }\n\n    // illegal move\n    if (move === null) return;\n\n    setState({\n      ...state,\n      turn: chess.turn(),\n      fen: chess.fen(),\n      pgn: chess.pgn(),\n      history: chess.history({ verbose: true }),\n      pieceSquare: \"\",\n    });\n    Multiplayer.updateBoard(move);\n  };\n\n  // central squares get diff dropSquareStyles\n  const onDragOverSquare = (square: any) => {\n    setState({\n      ...state,\n      dropSquareStyle:\n        square === \"e4\" || square === \"d4\" || square === \"e5\" || square === \"d5\"\n          ? { backgroundColor: \"cornFlowerBlue\" }\n          : { boxShadow: \"inset 0 0 1px 4px rgb(255, 255, 0)\" },\n    });\n  };\n\n  const onSquareRightClick = (square: any) =>\n    setState({\n      ...state,\n      squareStyles: { [square]: { backgroundColor: \"deepPink\" } },\n    });\n\n  const undoMove = () => {\n    const undoMoveObj = chess.undo();\n    if (undoMoveObj) {\n      // console.log(\"ES6 MOVE UNDO: \", game.prev());\n      setState({\n        ...state,\n        fen: chess.fen(),\n        undoMovesArray: [...state.undoMovesArray, undoMoveObj],\n      });\n      Multiplayer.undoMoveMsg([...state.undoMovesArray, undoMoveObj]);\n    }\n  };\n  const redoMove = () => {\n    if (state.undoMovesArray.length === 0) return;\n    const redoMoveObj: any | undefined = state.undoMovesArray.pop();\n    console.log(\"REDO: \", redoMoveObj);\n    if (redoMoveObj) {\n      // console.log(\"ES6 MOVE REDO: \", game.next());\n      const move = chess.move(redoMoveObj);\n      console.log(\"REDONE: \", move);\n      if (move !== null) {\n        setState(({ history, pieceSquare }) => ({\n          ...state,\n          fen: chess.fen(),\n          pgn: chess.pgn(),\n          history: chess.history({ verbose: true }),\n          squareStyles: squareStyling({ pieceSquare, history }),\n          // undoMovesArray: ,\n        }));\n\n        Multiplayer.updateBoard(move);\n      }\n    }\n  };\n\n  return {\n    turn: state.turn,\n    fen: state.fen,\n    pgn: state.pgn,\n    history: state.history,\n    orientation: state.orientation,\n    squareStyles: state.squareStyles,\n    pendingMove: state.pendingMove,\n    promotionModal,\n    setBoardPosition,\n    reset,\n    flip,\n    onDrop,\n    onMouseOverSquare,\n    onMouseOutSquare,\n    onDragOverSquare,\n    onSquareClick,\n    onSquareRightClick,\n    undoMove,\n    redoMove,\n    promotion,\n  };\n};\n\nconst squareStyling = ({\n  pieceSquare,\n  history,\n}: {\n  pieceSquare: any;\n  history: any;\n}) => {\n  const sourceSquare = history.length && history[history.length - 1].from;\n  const targetSquare = history.length && history[history.length - 1].to;\n\n  return {\n    [pieceSquare]: { backgroundColor: \"rgba(123,97,255,0.5)\" },\n    // ...(history.length && {\n    //   [sourceSquare]: {\n    //     backgroundColor: \"rgba(123,97,255,0.5)\",\n    //   },\n    // }),\n    ...(history.length && {\n      [targetSquare]: {\n        backgroundColor: \"rgba(123,97,255,0.5)\",\n      },\n    }),\n  };\n};\n\nexport default useChess;\n\n// To show promotional Modal or not\n// const showPromotionModal = () => setPromotionModal(true);\n// const hidePromotionModal = () => setPromotionModal(false);\n\n// const handleMove = (move: ShortMove) => {\n//   const moves = chess.moves({ verbose: true });\n\n//   for (let i = 0, len = moves.length; i < len; i++) {\n//     /* eslint-disable-line */\n//     if (moves[i].flags.indexOf(\"p\") !== -1 && moves[i].from === move.from) {\n//       setPendingMove([move.from, move.to]);\n//       // showPromotionModal();\n//       return;\n//     }\n//   }\n//   const moveVerbose = chess.move(move);\n//   if (moveVerbose) {\n//     setFen(chess.fen());\n//     Multiplayer.updateBoard(move);\n//   }\n// };\n\n// const calcMovable = (): IMovable => {\n//   const dests = new Map();\n//   chess.SQUARES.forEach((s) => {\n//     const ms = chess.moves({ square: s, verbose: true });\n//     if (ms.length)\n//       dests.set(\n//         s,\n//         ms.map((m) => m.to)\n//       );\n//   });\n\n//   return {\n//     free: false,\n//     dests: dests,\n//     showDests: true,\n//     events: {\n//       after: (from: any, to: any, metadeta: any) => {\n//         // console.log(\"metadata: \", { from, to, metadeta });\n//         return handleMove({ from: from, to: to });\n//       },\n//       afterNewPiece: (role: Role, key: Key, metaData: MoveMetadata) => {\n//         console.log(\"afterNewPiece: \", role, key, metaData);\n//       },\n//     },\n//     rookCastle: true,\n//   };\n// };\n\n// const calcDraggable = (): IDraggable => ({\n//   enabled: true,\n//   showGhost: false,\n//   deleteOnDropOff: false,\n// });\n","import { stringifyJSON } from \"./utils\";\nimport { RtmTextMessage } from \"agora-rtm-sdk\";\n\nconst messageParser = (json: any): RtmTextMessage => ({\n  text: stringifyJSON(json),\n  messageType: \"TEXT\",\n});\n\nconst agoraUtils = {\n  messageParser,\n};\n\nexport default agoraUtils;\n","import AgoraRTM, {\n  RtmChannel,\n  RtmClient,\n  RtmMessage,\n  RtmTextMessage,\n} from \"agora-rtm-sdk\";\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { parseJSON } from \"../utils/utils\";\nimport agoraUtils from \"../utils/agoraUtils\";\n\nconst useAgora = () => {\n  const [channel, setChannel] = useState<RtmChannel | null>(null);\n  const appId = \"f4b36b6c897e41bfaa3904d75da40777\";\n  const client: RtmClient | null = AgoraRTM.createInstance(appId);\n  let playerMeta = {\n    uid: (Math.floor(Math.random() * 90000) + 10000).toString(),\n    token: \"\",\n  };\n\n  useEffect(() => {\n    const playerLogin = async () => {\n      axios\n        .get(\n          `https://agoratokenserver-demo.herokuapp.com/access_token?channel=test&uid=${playerMeta.uid}`\n        )\n        .then((res: any) => {\n          console.log(res);\n          playerMeta.token = res.data?.token || \"\";\n          // console.log(\"LOGIN OPTIONS: \", playerMeta);\n          client.login(playerMeta).then(() => {\n            console.log(\"Login successful\");\n            const newChannel = client.createChannel(\"test\");\n            newChannel.join();\n            setChannel(newChannel);\n          });\n        });\n    };\n\n    playerLogin().then(() => {\n      console.log(\"integrations successful\");\n    });\n  }, []);\n\n  useEffect(() => {\n    if (channel) {\n      // channel?.on(\"ChannelMessage\", (message: any) => {\n      //   const data = parseJSON(message.text);\n      //   console.log(\"MESSAGE DATA: \", data);\n      // });\n\n      channel?.on(\"MemberJoined\", (memberId) => {\n        console.log(\"New member joined: \", memberId);\n      });\n      channel?.on(\"MemberLeft\", (memberId) => {\n        console.log(\"Member left: \", memberId);\n      });\n    }\n  }, [channel]);\n\n  const sendChannelMessage = (data: any, type: string) => {\n    const message = {\n      uid: playerMeta.uid,\n      json: data || {},\n      type,\n    };\n    console.log(agoraUtils.messageParser(message));\n    channel?.sendMessage(agoraUtils.messageParser(message)).then(() => {});\n  };\n\n  return { channel, playerMeta, sendChannelMessage };\n};\n\nexport default useAgora;\n","import { ChessInstance, Move, ShortMove } from \"chess.js\";\nimport React, { useEffect } from \"react\";\nimport {\n  BOARD_FEN_UPDATE,\n  BOARD_MOVE_UNDO,\n  BOARD_MOVE_UPDATE,\n  BOARD_PGN_UPDATE,\n} from \"../constants/chessMultiplayerMsgTypes\";\nimport { IMultiplayerProps } from \"../types/chessMultiplayer\";\nimport { parseJSON } from \"../utils/utils\";\n\ninterface IProps {\n  Agora: any;\n}\n\nconst useChessMultiplayer = (props: IProps) => {\n  const { Agora } = props;\n\n  const updateBoard = (move: ShortMove) => {\n    const updateObject = {\n      move: move,\n    };\n    Agora?.sendChannelMessage(updateObject, BOARD_MOVE_UPDATE);\n  };\n  const updateBoardFen = (fen: string) => {\n    const updateObject = {\n      fen: fen,\n    };\n    Agora?.sendChannelMessage(updateObject, BOARD_FEN_UPDATE);\n  };\n  const updateBoardPgn = (pgn: string) => {\n    const updateObject = {\n      pgn,\n    };\n    Agora?.sendChannelMessage(updateObject, BOARD_PGN_UPDATE);\n  };\n  const undoMoveMsg = (undoArray: Move[]) => {\n    const updateObject = {\n      undoArray: undoArray,\n    };\n    Agora?.sendChannelMessage(updateObject, BOARD_MOVE_UNDO);\n  };\n  const undoMove = ({\n    chess,\n    state,\n    setState,\n    undoArray,\n  }: {\n    chess: ChessInstance;\n    state: any;\n    setState: any;\n    undoArray: Move[];\n  }) => {\n    const undoMoveObj = chess.undo();\n    if (undoMoveObj) {\n      setState({\n        ...state,\n        fen: chess.fen(),\n        undoMovesArray: undoArray,\n      });\n    }\n  };\n\n  return { updateBoard, updateBoardFen, updateBoardPgn, undoMoveMsg, undoMove };\n};\n\nexport default useChessMultiplayer;\n","import { useEffect, useState } from \"react\";\nimport {\n  ChessInstance,\n  Move,\n  Piece,\n  PieceType,\n  ShortMove,\n  Square,\n} from \"chess.js\";\nimport { fenToObj, objToFen, parseJSON, styleToString } from \"../utils/utils\";\nimport { BOARD_MOVE_UPDATE } from \"../constants/chessMultiplayerMsgTypes\";\n\nconst Chess = require(\"chess.js\");\n\nconst defaultFen = \"rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1\";\nconst emptyBoardFen = \"8/8/8/8/8/8/8/8\";\n\nconst useBoardEditor = () => {\n  const [chess] = useState<ChessInstance>(new Chess(defaultFen));\n  const [state, setState] = useState<{\n    fen: string;\n    orientation: \"white\" | \"black\";\n    dropSquareStyle: any;\n    squareStyles: any;\n    pieceSquare: any;\n    square: string;\n    history: Move[];\n    boardPosition: any;\n    pgn: any;\n  }>({\n    fen: defaultFen,\n    orientation: \"white\",\n    // square styles for active drop square\n    dropSquareStyle: {},\n    // custom square styles\n    squareStyles: {},\n    // square with the currently clicked piece\n    pieceSquare: \"\",\n    // currently clicked square\n    square: \"\",\n    // array of past game moves\n    history: [],\n    boardPosition: fenToObj(defaultFen),\n    pgn: [],\n  });\n\n  // useEffect(() => {\n  //   console.log(\"ORIENTATION: \", state.orientation);\n  // }, [state.orientation]);\n\n  useEffect(() => {\n    console.log(\"BOARD_POSITION: \", objToFen(state.boardPosition));\n  }, [state.boardPosition]);\n\n  const setFenPosition = (fenString: string) => {\n    setState({\n      ...state,\n      fen: fenString,\n      boardPosition: fenToObj(fenString),\n    });\n  };\n\n  const setBoardPosition = (position: any) => {\n    setState({\n      ...state,\n      fen: objToFen(position) || state.fen,\n      boardPosition: position,\n    });\n  };\n\n  const reset = () => {\n    setState({\n      ...state,\n      fen: defaultFen,\n      boardPosition: fenToObj(defaultFen),\n    });\n  };\n  const clear = () => {\n    setState({\n      ...state,\n      fen: emptyBoardFen,\n      boardPosition: fenToObj(emptyBoardFen),\n    });\n  };\n\n  const flip = () => {\n    setState({\n      ...state,\n      orientation: state.orientation === \"white\" ? \"black\" : \"white\",\n    });\n  };\n\n  const onDrop = ({\n    sourceSquare,\n    targetSquare,\n    piece,\n  }: {\n    sourceSquare: Square | string;\n    targetSquare: Square;\n    piece?: string;\n  }) => {\n    console.log(\"EDITOR_ON_DROP: \", sourceSquare, targetSquare, piece);\n    let boardPosition;\n    boardPosition =\n      sourceSquare === \"spare\"\n        ? {\n            ...state.boardPosition,\n            [targetSquare]: piece,\n          }\n        : {\n            ...Object.fromEntries(\n              Object.entries(state.boardPosition).filter(\n                ([key, value]: [key: any, value: any]) => key !== sourceSquare\n              )\n            ),\n            [targetSquare]: piece,\n          };\n    console.log(\"BOARD_POSITION: \", boardPosition);\n    setState({\n      ...state,\n      fen: objToFen(boardPosition) || state.fen,\n      boardPosition,\n    });\n  };\n\n  return {\n    fen: state.fen,\n    pgn: state.pgn,\n    boardPosition: state.boardPosition,\n    orientation: state.orientation,\n    onDrop,\n    setBoardPosition,\n    setFenPosition,\n    reset,\n    clear,\n    flip,\n  };\n};\n\nexport default useBoardEditor;\n","import styled, { css } from \"styled-components\";\n\nconst chessboardEditorSidePanelStyle = css`\n  background-color: #2b2b34;\n  width: 386px;\n  border-radius: 0px 16px 16px 0px;\n`;\n\nexport const ScChessSidePanel = styled.div<{\n  editorMode: boolean;\n}>`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  ${({ editorMode }) => editorMode && chessboardEditorSidePanelStyle}\n`;\n\nexport const GamePlayPanel1 = styled.div`\n  div {\n    padding: 14px;\n    cursor: pointer;\n  }\n`;\nexport const GamePlayPanel2 = styled.div`\n  div {\n    padding: 14px;\n    cursor: pointer;\n  }\n`;\n\nexport const ScChessHistoryPanel = styled.div`\n  position: relative;\n  /* width: 176px; */\n  /* height: 242px; */\n  background: #2b2b34;\n  border: 1.46px solid #424242;\n  box-sizing: border-box;\n  padding: 10px 0px;\n  .title {\n    display: flex;\n    margin-left: 10px;\n    img {\n      margin-right: 3px;\n    }\n    font-weight: bold;\n    font-size: 18px;\n    line-height: 21px;\n    color: #ffffff;\n    margin-bottom: 11px;\n  }\n  .pgn-section {\n    width: 100%;\n    padding: 10px;\n    /* .error {\n      display: none;\n      height: 0px;\n    }\n    .outerBoard {\n      display: none;\n      height: 0px; \n    }*/\n    .moves {\n      color: white;\n      font-size: 10px;\n      move-number {}\n      move {\n        color: white;\n      }\n    }\n    .comment {\n      .commentRadio {\n        color: white;\n        display: flex;\n        flex-direction: row;\n        justify-content: flex-start;\n        align-items: center;\n        margin: 5px 0px;\n          margin-right: 12px;\n        }\n      }\n    }\n  }\n`;\n\nexport const ScSidePanelNav = styled.div`\n  position: relative;\n  /* bottom: -52px; */\n  bottom: -1px;\n  left: -1.46px;\n  /* width: 176px; */\n  height: 51px;\n  background: #2b2b34;\n  border: 1.46px solid #424242;\n  /* border-top: 0px; */\n  border-bottom: 0px;\n  box-sizing: border-box;\n  display: flex;\n  justify-content: space-between;\n  padding: 13.14px;\n  img {\n    cursor: pointer;\n  }\n`;\n\nexport const EditorSidePanel = styled.div`\n  padding: 26px;\n  height: 100%;\n  .title {\n    font-style: normal;\n    font-weight: bold;\n    font-size: 24px;\n    line-height: 29px;\n    color: #ffffff;\n  }\n  .divider {\n    width: 100%;\n    height: 0.5px;\n    background: #ffffff;\n    opacity: 0.1;\n    margin: 13.5px 0;\n    margin-bottom: 156px;\n  }\n  .slider {\n    width: 100%;\n    height: 32px;\n    background: #e8edf9;\n    border-radius: 10px;\n    display: flex;\n    /* margin-bottom: 156px; */\n    div {\n      width: 50%;\n      display: flex;\n      align-items: center;\n      justify-content: center;\n    }\n  }\n  label {\n    margin-bottom: 8px;\n    font-weight: 500;\n    font-size: 13px;\n    line-height: 16px;\n    text-transform: uppercase;\n    color: #ffffff;\n    opacity: 0.4;\n  }\n  .input-fen {\n    display: flex;\n    width: 100%;\n    margin-bottom: 24px;\n    input {\n      width: 100%;\n      height: 32px;\n      border-radius: 8px;\n    }\n  }\n  .output-fen {\n    display: flex;\n    align-items: center;\n    width: 100%;\n    height: 32px;\n    border-radius: 8px;\n    background: #ffffff;\n    overflow: hidden;\n    margin-bottom: 24px;\n    text-overflow: ellipsis;\n  }\n  .btn-panel {\n    display: flex;\n    width: 100%;\n    justify-content: space-between;\n    button {\n      width: 32%;\n      height: 40px;\n      color: #ffffff;\n      font-weight: 600;\n      font-size: 17px;\n      line-height: 20px;\n      background: #5656ff;\n      border: 1px solid rgba(255, 255, 255, 0.4);\n      box-sizing: border-box;\n      border-radius: 10px;\n    }\n  }\n`;\n\nconst chessboardEditorModeStyle = css`\n  div[class$=\"-spare-pieces\"] {\n    position: absolute;\n    width: 340px;\n    display: flex;\n    justify-content: space-between;\n    div[data-testid^=\"spare-\"]:nth-child(odd) {\n      background: #b7c0d8;\n    }\n    div[data-testid^=\"spare-\"]:nth-child(even) {\n      background: #e8edf9;\n    }\n    div {\n      /* width: 100%; */\n      margin: 2px;\n      border-radius: 12px;\n      div {\n        img {\n          padding: 8px 10px;\n          width: 26px !important;\n          height: 28px !important;\n        }\n      }\n    }\n  }\n`;\n\nexport const ScPromotionModal = styled.div`\n  display: flex;\n  flex-direction: row;\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  background: #2b2b34;\n  padding: 10px;\n  border-radius: 12px;\n  z-index: 6;\n  div:nth-child(odd) {\n    background: #b7c0d8;\n  }\n  div:nth-child(even) {\n    background: #e8edf9;\n  }\n  div {\n    margin: 2px;\n    border-radius: 12px;\n    img {\n      cursor: pointer;\n      padding: 8px 10px;\n      width: 26px;\n      height: 28px;\n    }\n  }\n`;\n\nexport const ScChessInterface = styled.div<{\n  dimension: number | undefined;\n  editorMode?: boolean;\n}>`\n  display: flex;\n  /* width: 1000px; */\n  /* height: fit-content; */\n  max-width: 1440px;\n  background: black;\n  grid-template-columns: 66% 37%;\n  grid-template-areas: \"board sidePanel\";\n  .board-container {\n    position: relative;\n    min-width: 500px;\n    min-height: 500px;\n    grid-area: board;\n    border: 10px solid rgba(255, 255, 255);\n    div {\n      ${({ editorMode }) => editorMode && chessboardEditorModeStyle}\n      .black-spare-pieces {\n        left: ${(props) =>\n          props.dimension ? `${props.dimension + 32}px` : \"0px\"};\n        bottom: ${(props) =>\n          props.dimension ? `${props.dimension - 130}px` : \"0px\"};\n\n        /* background:grey; */\n      }\n      .white-spare-pieces {\n        left: ${(props) =>\n          props.dimension ? `${props.dimension + 32}px` : \"0px\"};\n        bottom: ${(props) =>\n          props.dimension ? `${props.dimension - 190}px` : \"0px\"};\n        /* background:grey; */\n      }\n    }\n  }\n\n  ${ScChessSidePanel} {\n    grid-area: sidePanel;\n    /* width: 100%; */\n    /* height: 100%; */\n    ${GamePlayPanel1}, ${GamePlayPanel2} {\n      background: #2b2b34;\n      border: 2px solid rgba(255, 255, 255, 0.1);\n      border-radius: 0 8px 8px 0;\n    }\n  }\n`;\n\n// export const ScChessPgn = styled.div`\n//   color: white;\n// `;\n","export default __webpack_public_path__ + \"static/media/undoMove.586eb02f.svg\";","export default __webpack_public_path__ + \"static/media/redoMove.c6f42448.svg\";","export default __webpack_public_path__ + \"static/media/history.8223d0ff.svg\";","export default __webpack_public_path__ + \"static/media/resetBoard.7af0fcde.svg\";","export default __webpack_public_path__ + \"static/media/flipBoard.c1ef8478.svg\";","export default __webpack_public_path__ + \"static/media/loadGame.28f8774a.svg\";","export default __webpack_public_path__ + \"static/media/wK.3b342df8.svg\";","export default __webpack_public_path__ + \"static/media/wQ.785db365.svg\";","export default __webpack_public_path__ + \"static/media/wB.56f72474.svg\";","export default __webpack_public_path__ + \"static/media/wR.33cf0258.svg\";","export default __webpack_public_path__ + \"static/media/wN.d5fa39eb.svg\";","export default __webpack_public_path__ + \"static/media/wP.5f74a9fe.svg\";","export default __webpack_public_path__ + \"static/media/bK.e57316c7.svg\";","export default __webpack_public_path__ + \"static/media/bQ.c21470b8.svg\";","export default __webpack_public_path__ + \"static/media/bB.1f023e3e.svg\";","export default __webpack_public_path__ + \"static/media/bR.2724e583.svg\";","export default __webpack_public_path__ + \"static/media/bN.a46c4723.svg\";","export default __webpack_public_path__ + \"static/media/bP.d9262a65.svg\";","export default __webpack_public_path__ + \"static/media/arrowLeft.7e025148.svg\";","export default __webpack_public_path__ + \"static/media/arrowRight.ae8c68ee.svg\";","import React, { useEffect, useLayoutEffect } from \"react\";\nimport * as uuid from \"uuid\";\nimport { pgnView, pgnEdit, pgnPrint } from \"@mliebelt/pgn-viewer\";\n\ninterface IProps {\n  pgn: string | undefined;\n  mode: string;\n}\nconst PGNViewer = ({ pgn, mode }: IProps) => {\n  const pgnConfig = {\n    pgn,\n    timerTime: \"1\",\n    startPlay: pgn\n      ?.split(/\\d\\./)\n      .join(\"\")\n      .split(\" \")\n      .filter((item: string) => item !== \"\").length,\n    showResult: true,\n    boardSize: \"160\",\n    showFen: false,\n    showCoords: false,\n    figurine: true,\n    movesHeight: \"78px\",\n    // layout: \"left\",\n    // pieceStyle: \"merida\",\n  };\n  const id = `board-0`;\n\n  const mutationCallback = (mutationsList: any, observer: any) => {\n    // console.log(\"PGNPRINTMUTATION: \", mutationList);\n    for (const mutation of mutationsList) {\n      if (mutation.type === \"childList\") {\n        document.getElementById(`${id}Buttonpgn`)?.click();\n        console.log(\n          \"PGNPRINT: \",\n          document.getElementById(`textpgn${id}Button`)?.innerHTML\n        );\n        document.getElementById(`${id}Buttonpgn`)?.click();\n      }\n    }\n  };\n  useEffect(() => {\n    console.log(\n      \"PGNPRINTBUTTON: \",\n      document.getElementById(`${id}Buttonpgn`)?.click()\n    );\n\n    const movesDiv = document.getElementById(`${id}Moves`);\n    const config = { attributes: true, childList: true, subtree: true };\n    const observer = new MutationObserver(mutationCallback);\n    movesDiv && observer.observe(movesDiv, config);\n  }, [document.getElementById(`${id}Buttonpgn`)]);\n\n  useEffect(() => {\n    console.log(\n      \"PGNPRINT: \",\n      document.getElementById(`textpgn${id}Button`)?.innerHTML,\n      document.getElementById(`${id}Buttonpgn`)?.click()\n    );\n  }, [document.getElementById(`textpgn${id}Button`)]);\n  useLayoutEffect(() => {\n    switch (mode) {\n      case \"view\":\n        pgnView(id, pgnConfig);\n        break;\n      case \"edit\":\n        pgnEdit(id, pgnConfig);\n        break;\n      case \"print\":\n        pgnPrint(id, pgnConfig);\n\n        break;\n\n      default:\n        break;\n    }\n  });\n\n  return <div id={id}></div>;\n};\n\nconst areEqual = (prevProps: IProps, nextProps: IProps) => {\n  return prevProps.pgn === nextProps.pgn ? true : false;\n};\n\nexport default React.memo(PGNViewer, areEqual);\n","import React, { ChangeEvent, useEffect, useState } from \"react\";\nimport NativeChessboard from \"chessboardjsx\";\nimport useChess from \"../../hooks/useChess\";\nimport useAgora from \"../../hooks/useAgora\";\nimport useChessMultiplayer from \"../../hooks/useChessMultiplayer\";\nimport useBoardEditor from \"../../hooks/useBoardEditor\";\nimport { IChessboardProps } from \"../../types/chessboardTypes\";\nimport {\n  // ScChessPgn,\n  ScChessInterface,\n  ScChessSidePanel,\n  GamePlayPanel1,\n  GamePlayPanel2,\n  EditorSidePanel,\n  ScChessHistoryPanel,\n  ScSidePanelNav,\n  ScPromotionModal,\n} from \"../_StyledComponent/StyledComponent\";\nimport undoIcon from \"../../assets/images/sidePanelIcons/undoMove.svg\";\nimport redoIcon from \"../../assets/images/sidePanelIcons/redoMove.svg\";\nimport historyIcon from \"../../assets/images/sidePanelIcons/history.svg\";\nimport resetIcon from \"../../assets/images/sidePanelIcons/resetBoard.svg\";\nimport flipIcon from \"../../assets/images/sidePanelIcons/flipBoard.svg\";\nimport loadIcon from \"../../assets/images/sidePanelIcons/loadGame.svg\";\nimport wK from \"../../assets/images/chessPieces/wK.svg\";\nimport wQ from \"../../assets/images/chessPieces/wQ.svg\";\nimport wB from \"../../assets/images/chessPieces/wB.svg\";\nimport wR from \"../../assets/images/chessPieces/wR.svg\";\nimport wN from \"../../assets/images/chessPieces/wN.svg\";\nimport wP from \"../../assets/images/chessPieces/wP.svg\";\nimport bK from \"../../assets/images/chessPieces/bK.svg\";\nimport bQ from \"../../assets/images/chessPieces/bQ.svg\";\nimport bB from \"../../assets/images/chessPieces/bB.svg\";\nimport bR from \"../../assets/images/chessPieces/bR.svg\";\nimport bN from \"../../assets/images/chessPieces/bN.svg\";\nimport bP from \"../../assets/images/chessPieces/bP.svg\";\nimport arrowLeft from \"../../assets/images/arrowLeft.svg\";\nimport arrowRight from \"../../assets/images/arrowRight.svg\";\nimport PGNViewer from \"../PGNViewer/PGNViewer\";\n\ninterface Props {}\n\ninterface ICustomPieceProps {\n  squareWidth: number;\n  isDragging: boolean;\n}\n\nconst SidePanelMenu = ({\n  undoMove,\n  redoMove,\n  flip,\n  reset,\n  setSidePanelSection,\n}: {\n  undoMove: any;\n  redoMove: any;\n  flip: any;\n  reset: any;\n  setSidePanelSection: any;\n}) => (\n  <>\n    <GamePlayPanel1>\n      <div onClick={undoMove}>\n        <img src={undoIcon} alt=\"Undo\" />\n      </div>\n      <div onClick={redoMove}>\n        <img src={redoIcon} alt=\"Redo\" />\n      </div>\n      <div>\n        <img\n          src={historyIcon}\n          alt=\"History\"\n          onClick={() => {\n            setSidePanelSection(\"history\");\n          }}\n        />\n      </div>\n      <div>\n        <img src={resetIcon} alt=\"Reset\" onClick={reset} />\n      </div>\n      <div>\n        <img src={flipIcon} alt=\"Flip\" onClick={flip} />\n      </div>\n    </GamePlayPanel1>\n    <GamePlayPanel2>\n      <div>\n        <img src={loadIcon} alt=\"Load\" />\n      </div>\n    </GamePlayPanel2>\n  </>\n);\n\nconst ChessInterface = (props: Props) => {\n  const [dimension, setDimension] = useState<number>();\n  // const [undoMove, setUndoMove] = useState<boolean>(false);\n  const [editorMode, setEditorMode] = useState<boolean>(\n    (Object.fromEntries(new URLSearchParams(window.location.search).entries())\n      .editorMode === \"true\"\n      ? true\n      : false) || false\n  );\n  const [sidePanelSection, setSidePanelSection] = useState<string | undefined>(\n    \"menu\"\n  );\n  // const [overlay, setOverlay] = useState(new ChessboardArrows(\"board-0\"));\n\n  const Agora = useAgora();\n  const Multiplayer = useChessMultiplayer({\n    Agora,\n  });\n  const boardEditor = useBoardEditor();\n  const {\n    turn,\n    setBoardPosition,\n    reset,\n    flip,\n    orientation,\n    pendingMove,\n    fen,\n    pgn,\n    history,\n    promotionModal,\n    onDrop,\n    onMouseOverSquare,\n    onMouseOutSquare,\n    squareStyles,\n    onDragOverSquare,\n    onSquareClick,\n    onSquareRightClick,\n    undoMove,\n    redoMove,\n    promotion,\n  } = useChess(Agora, Multiplayer);\n  let firstChild: Element | null | undefined;\n  let lastChild: Element | null | undefined;\n\n  useEffect(() => {\n    updateDimensions();\n    window.addEventListener(\"resize\", updateDimensions);\n\n    return () => window.removeEventListener(\"resize\", updateDimensions);\n  }, []);\n  useEffect(() => {\n    const boardContainerDiv = window.document\n      .getElementById(\"board-container\")\n      ?.querySelector<HTMLElement>(\"div\");\n    //   ?.querySelector(\"div\")\n\n    firstChild = boardContainerDiv?.firstElementChild;\n    lastChild = boardContainerDiv?.lastElementChild;\n\n    if (firstChild && lastChild) {\n      firstChild.classList.add(\"black-spare-pieces\");\n      lastChild.classList.add(\"white-spare-pieces\");\n      firstChild.setAttribute(\"style\", \"\");\n      lastChild.setAttribute(\"style\", \"\");\n    }\n  }, [window.document.getElementById(\"board-container\")]);\n  // useEffect(() => {\n  //   console.log(\"HISTORY: \", history);\n  // }, [history]);\n  // useEffect(() => {\n\n  const updateDimensions = () => {\n    setDimension(\n      window.document.getElementById(\"board-container\")?.clientWidth\n    );\n  };\n\n  const customPieces = {\n    wK: ({ squareWidth, isDragging }: ICustomPieceProps) => (\n      <img\n        style={{\n          width: squareWidth,\n          height: squareWidth,\n        }}\n        src={wK}\n        alt={\"wK\"}\n      />\n    ),\n    wQ: ({ squareWidth, isDragging }: ICustomPieceProps) => (\n      <img\n        style={{\n          width: squareWidth,\n          height: squareWidth,\n        }}\n        src={wQ}\n        alt={\"wQ\"}\n      />\n    ),\n    wB: ({ squareWidth, isDragging }: ICustomPieceProps) => (\n      <img\n        style={{\n          width: squareWidth,\n          height: squareWidth,\n        }}\n        src={wB}\n        alt={\"wB\"}\n      />\n    ),\n    wR: ({ squareWidth, isDragging }: ICustomPieceProps) => (\n      <img\n        style={{\n          width: squareWidth,\n          height: squareWidth,\n        }}\n        src={wR}\n        alt={\"wR\"}\n      />\n    ),\n    wN: ({ squareWidth, isDragging }: ICustomPieceProps) => (\n      <img\n        style={{\n          width: squareWidth,\n          height: squareWidth,\n        }}\n        src={wN}\n        alt={\"wN\"}\n      />\n    ),\n    wP: ({ squareWidth, isDragging }: ICustomPieceProps) => (\n      <img\n        style={{\n          width: squareWidth,\n          height: squareWidth,\n        }}\n        src={wP}\n        alt={\"wP\"}\n      />\n    ),\n\n    bK: ({ squareWidth, isDragging }: ICustomPieceProps) => (\n      <img\n        style={{\n          width: squareWidth,\n          height: squareWidth,\n        }}\n        src={bK}\n        alt={\"bK\"}\n      />\n    ),\n    bQ: ({ squareWidth, isDragging }: ICustomPieceProps) => (\n      <img\n        style={{\n          width: squareWidth,\n          height: squareWidth,\n        }}\n        src={bQ}\n        alt={\"bQ\"}\n      />\n    ),\n    bB: ({ squareWidth, isDragging }: ICustomPieceProps) => (\n      <img\n        style={{\n          width: squareWidth,\n          height: squareWidth,\n        }}\n        src={bB}\n        alt={\"bB\"}\n      />\n    ),\n    bR: ({ squareWidth, isDragging }: ICustomPieceProps) => (\n      <img\n        style={{\n          width: squareWidth,\n          height: squareWidth,\n        }}\n        src={bR}\n        alt={\"bR\"}\n      />\n    ),\n    bN: ({ squareWidth, isDragging }: ICustomPieceProps) => (\n      <img\n        style={{\n          width: squareWidth,\n          height: squareWidth,\n        }}\n        src={bN}\n        alt={\"bN\"}\n      />\n    ),\n    bP: ({ squareWidth, isDragging }: ICustomPieceProps) => (\n      <img\n        style={{\n          width: squareWidth,\n          height: squareWidth,\n        }}\n        src={bP}\n        alt={\"bP\"}\n      />\n    ),\n  };\n\n  let chessboardConfig: Partial<IChessboardProps> = {\n    id: \"board-0\",\n    position: editorMode ? boardEditor.boardPosition : fen,\n    dropOffBoard: editorMode ? \"trash\" : \"snapback\",\n    draggable: true,\n    lightSquareStyle: { backgroundColor: \"#E8EDF9\" },\n    darkSquareStyle: { backgroundColor: \"#B7C0D8\" },\n    pieces: customPieces,\n    boardStyle: {\n      width: dimension,\n      height: dimension,\n      position: \"relative\",\n    },\n    width: dimension,\n\n    getPosition: editorMode ? boardEditor.setBoardPosition : setBoardPosition,\n    ...(editorMode ? { onDrop: boardEditor.onDrop } : { onDrop }),\n    // onDrop,\n    orientation: editorMode ? boardEditor.orientation : orientation || \"white\",\n    ...(!editorMode && {\n      onMouseOverSquare,\n      onMouseOutSquare,\n      squareStyles,\n      onDragOverSquare,\n      onSquareClick,\n      onSquareRightClick,\n    }),\n    sparePieces: editorMode,\n  };\n\n  const renderHistoryPanel = () => (\n    <ScChessHistoryPanel>\n      <div className=\"title\">\n        <img src={historyIcon} alt=\"\" />\n        History\n      </div>\n\n      {/* <table className=\"pgn\">\n          {pgn?.split(/\\d\\./)?.map?.(\n            (move: string, index: number) =>\n              index !== 0 && (\n                <tr>\n                  <td>{index}</td>\n                  {move\n                    .split(\" \")\n                    .filter((item: string) => item !== \"\")\n                    .map((singleMove: string, i: number) => (\n                      <td>{singleMove}</td>\n                    ))}\n                </tr>\n              )\n          )}\n        </table> */}\n      <div className=\"pgn-section\">\n        {pgn && <PGNViewer pgn={pgn} mode=\"edit\"></PGNViewer>}\n      </div>\n      <ScSidePanelNav>\n        <img\n          src={arrowLeft}\n          alt=\"\"\n          onClick={() => {\n            setSidePanelSection(\"menu\");\n          }}\n        />\n        <img src={arrowRight} alt=\"\" />\n      </ScSidePanelNav>\n    </ScChessHistoryPanel>\n  );\n  const renderSidePanel = () => {\n    switch (sidePanelSection) {\n      case \"menu\":\n        return (\n          <SidePanelMenu\n            undoMove={undoMove}\n            redoMove={redoMove}\n            reset={reset}\n            flip={flip}\n            setSidePanelSection={setSidePanelSection}\n          />\n        );\n      case \"history\":\n        return renderHistoryPanel();\n\n      default:\n        return (\n          <SidePanelMenu\n            undoMove={undoMove}\n            redoMove={redoMove}\n            reset={reset}\n            flip={flip}\n            setSidePanelSection={setSidePanelSection}\n          />\n        );\n    }\n  };\n  const renderPromotionModal = (\n    <ScPromotionModal>\n      <div>\n        <img\n          src={turn === \"w\" ? wQ : bQ}\n          alt=\"\"\n          width={dimension && dimension / 8}\n          height={dimension && dimension / 8}\n          onClick={() => {\n            pendingMove &&\n              promotion(\n                pendingMove.sourceSquare,\n                pendingMove.targetSquare,\n                \"q\"\n              );\n          }}\n        />\n      </div>\n      <div>\n        <img\n          src={turn === \"w\" ? wB : bB}\n          alt=\"\"\n          width={dimension && dimension / 8}\n          height={dimension && dimension / 8}\n          onClick={() => {\n            pendingMove &&\n              promotion(\n                pendingMove.sourceSquare,\n                pendingMove.targetSquare,\n                \"b\"\n              );\n          }}\n        />\n      </div>\n      <div>\n        <img\n          src={turn === \"w\" ? wR : bR}\n          alt=\"\"\n          width={dimension && dimension / 8}\n          height={dimension && dimension / 8}\n          onClick={() => {\n            pendingMove &&\n              promotion(\n                pendingMove.sourceSquare,\n                pendingMove.targetSquare,\n                \"r\"\n              );\n          }}\n        />\n      </div>\n      <div>\n        <img\n          src={turn === \"w\" ? wN : bN}\n          alt=\"\"\n          width={dimension && dimension / 8}\n          height={dimension && dimension / 8}\n          onClick={() => {\n            pendingMove &&\n              promotion(\n                pendingMove.sourceSquare,\n                pendingMove.targetSquare,\n                \"n\"\n              );\n          }}\n        />\n      </div>\n    </ScPromotionModal>\n  );\n\n  return (\n    <ScChessInterface dimension={dimension} editorMode={editorMode}>\n      <div id=\"board-container\" className=\"board-container\">\n        {promotionModal && renderPromotionModal}\n        <NativeChessboard {...chessboardConfig} />\n        {/* <PGNViewer pgn={pgn} mode=\"edit\" /> */}\n      </div>\n      {/* {!editorMode && ( */}\n      <ScChessSidePanel editorMode={editorMode}>\n        {editorMode ? (\n          <EditorSidePanel>\n            <div className=\"title\">Board Settings</div>\n            <div className=\"divider\"></div>\n            <label htmlFor=\"inputFen\">Fen</label>\n            <div className=\"input-fen\">\n              <input\n                name=\"inputFen\"\n                type=\"text\"\n                value={boardEditor?.fen}\n                onChange={(e: ChangeEvent<HTMLInputElement>) => {\n                  boardEditor.setFenPosition(e.target.value);\n                }}\n              />\n            </div>\n            <div className=\"btn-panel\">\n              <button onClick={boardEditor.reset}>Reset</button>\n              <button onClick={boardEditor.clear}>Clear</button>\n              <button onClick={boardEditor?.flip}>Flip</button>\n            </div>\n          </EditorSidePanel>\n        ) : (\n          <>{renderSidePanel()}</>\n        )}\n      </ScChessSidePanel>\n      {/* )} */}\n    </ScChessInterface>\n  );\n};\n\nexport default ChessInterface;\n","import React from \"react\";\nimport \"./app.scss\";\nimport ChessInterface from \"./components/ChessInterface/ChessInterface\";\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <ChessInterface />\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}