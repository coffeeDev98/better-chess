{"version":3,"sources":["utils/utils.ts","constants/chessMultiplayerMsgTypes.ts","hooks/usePGN.tsx","hooks/useChess.tsx","utils/agoraUtils.ts","hooks/useAgora.tsx","hooks/useChessMultiplayer.tsx","hooks/useBoardEditor.tsx","components/_StyledComponent/StyledComponent.tsx","assets/images/sidePanelIcons/undoMove.svg","assets/images/sidePanelIcons/redoMove.svg","assets/images/sidePanelIcons/history.svg","assets/images/sidePanelIcons/resetBoard.svg","assets/images/sidePanelIcons/flipBoard.svg","assets/images/sidePanelIcons/loadGame.svg","assets/images/chessPieces/wK.svg","assets/images/chessPieces/wQ.svg","assets/images/chessPieces/wB.svg","assets/images/chessPieces/wR.svg","assets/images/chessPieces/wN.svg","assets/images/chessPieces/wP.svg","assets/images/chessPieces/bK.svg","assets/images/chessPieces/bQ.svg","assets/images/chessPieces/bB.svg","assets/images/chessPieces/bR.svg","assets/images/chessPieces/bN.svg","assets/images/chessPieces/bP.svg","assets/images/arrowLeft.svg","assets/images/arrowRight.svg","components/PGNViewer/PGNViewer.tsx","components/ChessInterface/ChessInterface.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["COLUMNS","split","isObject","o","Object","prototype","toString","call","isString","s","validPositionObject","pos","ctor","prot","undefined","constructor","hasOwnProperty","isPlainObject","i","square","search","code","pieceCodeToFen","piece","pieceCodeLetters","toUpperCase","toLowerCase","objToFen","obj","fen","currentRow","j","replace","squeezeFenEmptySquares","fenToObj","chunks","expandFenEmptySquares","length","validFen","rows","position","row","colIdx","parseInt","BOARD_MOVE_UPDATE","BOARD_MOVE_UNDO","usePGN","cpgn","useState","history","plyNumber","moveNumber","lastMove","state","setState","useEffect","console","log","setCPgn","move","color","flags","from","next","ply","previous","san","to","rav","ravs","pushMove","movesArray","forEach","m","push","fetchPrevMove","map","filter","item","addMove","newHistory","addVariation","lm","ti","undoMove","Chess","require","defaultFen","squareStyling","pieceSquare","targetSquare","backgroundColor","useChess","Agora","Multiplayer","chess","PGN","promotionModal","setPromotionModal","turn","orientation","pendingMove","dropSquareStyle","squareStyles","boardPosition","pgn","undoMovesArray","fromEntries","URLSearchParams","window","location","entries","load","in_check","inCheck","channel","on","message","jsonString","data","text","JSON","parse","type","onDrop","sourceSquare","json","parametersObj","undoArray","showPromotionModal","checkedKingPos","keys","find","key","moves","verbose","len","indexOf","fens","undo","updateBoard","setBoardPosition","reset","flip","onMouseOverSquare","squaresToHighlight","highlightStyles","reduce","a","c","background","borderRadius","highlightSquare","onMouseOutSquare","currKingPieceSquare","removeHighlightSquare","onDragOverSquare","boxShadow","onSquareClick","includes","onSquareRightClick","undoMoveObj","undoMoveMsg","redoMove","redoMoveObj","pop","promotion","e","agoraUtils","messageParser","stringify","messageType","useAgora","setChannel","client","AgoraRTM","createInstance","playerMeta","uid","Math","floor","random","token","axios","get","then","res","login","newChannel","createChannel","join","playerLogin","memberId","sendChannelMessage","sendMessage","useChessMultiplayer","props","updateObject","emptyBoardFen","useBoardEditor","setFenPosition","fenString","clear","chessboardEditorSidePanelStyle","css","ScChessSidePanel","styled","div","editorMode","GamePlayPanel1","GamePlayPanel2","ScChessHistoryPanel","ScSidePanelNav","EditorSidePanel","chessboardEditorModeStyle","ScPromotionModal","ScChessInterface","dimension","PGNViewer","mode","pgnConfig","timerTime","startPlay","showResult","boardSize","showFen","showCoords","figurine","movesHeight","id","useLayoutEffect","pgnView","pgnEdit","pgnPrint","areEqual","prevProps","nextProps","React","memo","SidePanelMenu","setSidePanelSection","onClick","src","undoIcon","alt","redoIcon","historyIcon","resetIcon","flipIcon","loadIcon","ChessInterface","firstChild","lastChild","setDimension","sidePanelSection","boardEditor","updateDimensions","addEventListener","removeEventListener","boardContainerDiv","document","getElementById","querySelector","firstElementChild","lastElementChild","classList","add","setAttribute","clientWidth","customPieces","wK","squareWidth","isDragging","style","width","height","wQ","wB","wR","wN","wP","bK","bQ","bB","bR","bN","bP","chessboardConfig","dropOffBoard","draggable","lightSquareStyle","darkSquareStyle","pieces","boardStyle","getPosition","sparePieces","renderPromotionModal","className","htmlFor","name","value","onChange","target","arrowLeft","arrowRight","renderSidePanel","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.9399972e.chunk.js","sourcesContent":["export const parseJSON = (jsonString: string) => JSON.parse(jsonString);\r\nexport const stringifyJSON = (jsonString: string) => JSON.stringify(jsonString);\r\n\r\nexport const styleToString = (style: any) => {\r\n  return Object.keys(style).reduce(\r\n    (acc, key) =>\r\n      acc +\r\n      key\r\n        .split(/(?=[A-Z])/)\r\n        .join(\"-\")\r\n        .toLowerCase() +\r\n      \":\" +\r\n      style[key] +\r\n      \";\",\r\n    \"\"\r\n  );\r\n};\r\n\r\nvar COLUMNS = \"abcdefgh\".split(\"\");\r\nfunction isObject(o: any) {\r\n  return Object.prototype.toString.call(o) === \"[object Object]\";\r\n}\r\nfunction isPlainObject(o: any) {\r\n  var ctor, prot;\r\n\r\n  if (isObject(o) === false) return false;\r\n\r\n  // If has modified constructor\r\n  ctor = o.constructor;\r\n  if (ctor === undefined) return true;\r\n\r\n  // If has modified prototype\r\n  prot = ctor.prototype;\r\n  if (isObject(prot) === false) return false;\r\n\r\n  // If constructor does not have an Object-specific method\r\n  if (prot.hasOwnProperty(\"isPrototypeOf\") === false) {\r\n    return false;\r\n  }\r\n\r\n  // Most likely a plain Object\r\n  return true;\r\n}\r\nfunction isString(s: any) {\r\n  return typeof s === \"string\";\r\n}\r\nfunction validSquare(square: any) {\r\n  return isString(square) && square.search(/^[a-h][1-8]$/) !== -1;\r\n}\r\nfunction validPieceCode(code: any) {\r\n  return isString(code) && code.search(/^[bw][KQRNBP]$/) !== -1;\r\n}\r\nfunction validPositionObject(pos: any) {\r\n  if (!isPlainObject(pos)) return false;\r\n\r\n  for (var i in pos) {\r\n    if (!pos.hasOwnProperty(i)) continue;\r\n\r\n    if (!validSquare(i) || !validPieceCode(pos[i])) {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  return true;\r\n}\r\n// convert bP, wK, etc code to FEN structure\r\nfunction pieceCodeToFen(piece: string) {\r\n  var pieceCodeLetters = piece.split(\"\");\r\n\r\n  // white piece\r\n  if (pieceCodeLetters[0] === \"w\") {\r\n    return pieceCodeLetters[1].toUpperCase();\r\n  }\r\n\r\n  // black piece\r\n  return pieceCodeLetters[1].toLowerCase();\r\n}\r\n// convert FEN piece code to bP, wK, etc\r\nfunction fenToPieceCode(piece: string) {\r\n  // black piece\r\n  if (piece.toLowerCase() === piece) {\r\n    return \"b\" + piece.toUpperCase();\r\n  }\r\n\r\n  // white piece\r\n  return \"w\" + piece.toUpperCase();\r\n}\r\nfunction squeezeFenEmptySquares(fen: string) {\r\n  return fen\r\n    .replace(/11111111/g, \"8\")\r\n    .replace(/1111111/g, \"7\")\r\n    .replace(/111111/g, \"6\")\r\n    .replace(/11111/g, \"5\")\r\n    .replace(/1111/g, \"4\")\r\n    .replace(/111/g, \"3\")\r\n    .replace(/11/g, \"2\");\r\n}\r\nfunction expandFenEmptySquares(fen: string) {\r\n  return fen\r\n    .replace(/8/g, \"11111111\")\r\n    .replace(/7/g, \"1111111\")\r\n    .replace(/6/g, \"111111\")\r\n    .replace(/5/g, \"11111\")\r\n    .replace(/4/g, \"1111\")\r\n    .replace(/3/g, \"111\")\r\n    .replace(/2/g, \"11\");\r\n}\r\nfunction validFen(fen: any) {\r\n  if (!isString(fen)) return false;\r\n\r\n  // cut off any move, castling, etc info from the end\r\n  // we're only interested in position information\r\n  fen = fen.replace(/ .+$/, \"\");\r\n\r\n  // expand the empty square numbers to just 1s\r\n  fen = expandFenEmptySquares(fen);\r\n\r\n  // FEN should be 8 sections separated by slashes\r\n  var chunks = fen.split(\"/\");\r\n  if (chunks.length !== 8) return false;\r\n\r\n  // check each section\r\n  for (var i = 0; i < 8; i++) {\r\n    if (chunks[i].length !== 8 || chunks[i].search(/[^kqrnbpKQRNBP1]/) !== -1) {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  return true;\r\n}\r\n\r\nexport const objToFen = (obj: any) => {\r\n  if (!validPositionObject(obj)) return false;\r\n\r\n  var fen = \"\";\r\n\r\n  var currentRow = 8;\r\n  for (var i = 0; i < 8; i++) {\r\n    for (var j = 0; j < 8; j++) {\r\n      var square = COLUMNS[j] + currentRow;\r\n\r\n      // piece exists\r\n      if (obj.hasOwnProperty(square)) {\r\n        fen = fen + pieceCodeToFen(obj[square]);\r\n      } else {\r\n        // empty space\r\n        fen = fen + \"1\";\r\n      }\r\n    }\r\n\r\n    if (i !== 7) {\r\n      fen = fen + \"/\";\r\n    }\r\n\r\n    currentRow = currentRow - 1;\r\n  }\r\n\r\n  // squeeze the empty numbers together\r\n  fen = squeezeFenEmptySquares(fen);\r\n\r\n  return fen;\r\n};\r\n// convert FEN string to position object\r\n// returns false if the FEN string is invalid\r\nexport const fenToObj = (fen: any) => {\r\n  if (!validFen(fen)) return false;\r\n\r\n  // cut off any move, castling, etc info from the end\r\n  // we're only interested in position information\r\n  fen = fen.replace(/ .+$/, \"\");\r\n\r\n  var rows = fen.split(\"/\");\r\n  var position: any = {};\r\n\r\n  var currentRow = 8;\r\n  for (var i = 0; i < 8; i++) {\r\n    var row = rows[i].split(\"\");\r\n    var colIdx = 0;\r\n\r\n    // loop through each character in the FEN section\r\n    for (var j = 0; j < row.length; j++) {\r\n      // number / empty squares\r\n      if (row[j].search(/[1-8]/) !== -1) {\r\n        var numEmptySquares = parseInt(row[j], 10);\r\n        colIdx = colIdx + numEmptySquares;\r\n      } else {\r\n        // piece\r\n        var square = COLUMNS[colIdx] + currentRow;\r\n        position[square] = fenToPieceCode(row[j]);\r\n        colIdx = colIdx + 1;\r\n      }\r\n    }\r\n\r\n    currentRow = currentRow - 1;\r\n  }\r\n\r\n  return position;\r\n};\r\n","export const BOARD_MOVE_UPDATE = \"BOARD_MOVE_UPDATE\";\r\nexport const BOARD_MOVE_UNDO = \"BOARD_MOVE_UNDO\";\r\n","import { Move, PieceType, Square } from \"chess.js\";\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\ninterface IProps {}\r\n\r\ntype RAV = IPGNObject[];\r\n\r\ninterface IPGNObject {\r\n  color: \"w\" | \"b\"; // the moving color\r\n  fen: string; // the fen after that move\r\n  flags: string; // the flags, like described below\r\n  from: Square; // the square from\r\n  next: IPGNObject | undefined; // a pointer to the next move\r\n  piece: PieceType; // the piece type\r\n  ply: number; // the ply number\r\n  moveNumber: number; //number of full moves played (1 set of white & black move)\r\n  previous: IPGNObject | undefined; // a pointer to the previous move\r\n  san: string; // the move in SAN notation\r\n  to: Square; // the square to\r\n  rav: RAV | undefined; // a pointer to the begin of the current variation\r\n  ravs: RAV[] | undefined; // all variations starting with that move\r\n}\r\n\r\nconst usePGN = () => {\r\n  const [state, setState] = useState<{\r\n    history: IPGNObject[];\r\n    plyNumber: number;\r\n    moveNumber: number;\r\n    lastMove: IPGNObject | undefined;\r\n  }>({ history: [], plyNumber: 0, moveNumber: 0, lastMove: undefined });\r\n  // let lastMove: IPGNObject | undefined = undefined;\r\n  // const [lastMove, setLastMove] = useState<IPGNObject | undefined>();\r\n  // const [pgnObject, setPgnObject] = useState<IPGNObject | undefined>();\r\n  // const [history, setHistory] = useState<IPGNObject[]>([]);\r\n  // let history: IPGNObject[] = [];\r\n  let cpgn: IPGNObject | undefined;\r\n  useEffect(() => {\r\n    console.log(\"usePGN: \", state);\r\n  }, [state]);\r\n\r\n  const setCPgn = (move: Move, fen: string) => {\r\n    cpgn = {\r\n      fen, // the fen after that move\r\n      color: move.color, // the moving color\r\n      flags: move.flags, // the flags, like described below\r\n      from: move.from, // the square from\r\n      next: undefined, //{color: \"b\", from: \"e7\", to: \"e6\", flags: \"n\", piece: \"p\", /*…*/}, // a pointer to the next move\r\n      piece: move.piece, // the piece type\r\n      ply: ++state.plyNumber, // the ply number - half move in chess (1 black/white move)\r\n      moveNumber: move.color === \"w\" ? ++state.moveNumber : state.moveNumber,\r\n      previous: state.lastMove || undefined, // a pointer to the previous move\r\n      san: move.san, // the move in SAN notation\r\n      to: move.to, // the square to\r\n      rav: undefined, // [{/*…*/}, {/*…*/}, {/*…*/}, {/*…*/}], // a pointer to the begin of the current variation\r\n      ravs: [], // all variations starting with that move\r\n    };\r\n  };\r\n  const pushMove = (movesArray: IPGNObject[], move: IPGNObject) => {\r\n    movesArray.forEach((m: IPGNObject) => {\r\n      if (m.rav) {\r\n        pushMove(m.rav, move);\r\n      }\r\n      if (m.fen === state.lastMove?.fen) {\r\n        m.next = move;\r\n        movesArray.push(move);\r\n      }\r\n    });\r\n    return movesArray;\r\n  };\r\n  const addMove = (move: Move, fen: string) => {\r\n    setCPgn(move, fen);\r\n    if (cpgn) {\r\n      if (state.history.length === 0) {\r\n        setState({ ...state, history: [cpgn], lastMove: cpgn });\r\n      } else if (state.history.length > 0 && state.lastMove) {\r\n        const newHistory = pushMove(state.history, cpgn);\r\n        setState({\r\n          ...state,\r\n          lastMove: cpgn,\r\n          history: newHistory,\r\n        });\r\n        console.log(\"usePGN NEWHISTORY: \", newHistory);\r\n        // pgnObject = undefined;\r\n      }\r\n    }\r\n  };\r\n  const addVariation = (\r\n    lm: IPGNObject | undefined,\r\n    move: Move,\r\n    fen: string\r\n  ) => {\r\n    console.log(\"usePGN addVariation called\");\r\n    setCPgn(move, fen);\r\n    if (lm) {\r\n      setState({\r\n        ...state,\r\n        history: state.history.map((item: IPGNObject) => {\r\n          if (item.fen === lm.fen && cpgn) {\r\n            let ti = item;\r\n            ti.rav = [cpgn];\r\n            return ti;\r\n          }\r\n          return item;\r\n        }),\r\n        lastMove: cpgn,\r\n      });\r\n    }\r\n  };\r\n  const fetchPrevMove: any = (movesArray: IPGNObject[]) => {\r\n    console.log(\"usePGN STATE.LASTMOVE: \", state.lastMove);\r\n\r\n    console.log(\"usePGN TRAVERSING: \", movesArray);\r\n    return movesArray\r\n      .map((m: IPGNObject) => {\r\n        console.log(\"usePGN CHECKING: \", m);\r\n        return m.rav\r\n          ? fetchPrevMove(m.rav)\r\n          : m.fen === state.lastMove?.previous?.fen && m;\r\n        // if (m.rav) {\r\n        //   fetchPrevMove(m.rav);\r\n        // }\r\n        // if (m.san === state.lastMove?.previous?.san) {\r\n        //   return m;\r\n        // }\r\n      })\r\n      .filter((item: any) => item !== false)[0];\r\n  };\r\n  const undoMove = () => {\r\n    console.log(\"usePGN LASTMOVE: \", fetchPrevMove(state.history));\r\n    setState({\r\n      ...state,\r\n      lastMove: fetchPrevMove(state.history), // state.history.filter((h: IPGNObject) => h.fen === state.lastMove?.previous?.fen)[0],\r\n      plyNumber: --state.plyNumber,\r\n      moveNumber:\r\n        (state.lastMove?.color &&\r\n          (state.lastMove?.color === \"b\"\r\n            ? --state.moveNumber\r\n            : state.moveNumber)) ||\r\n        state.moveNumber,\r\n    });\r\n  };\r\n\r\n  return {\r\n    history: state.history,\r\n    lastMove: state.lastMove,\r\n    addMove,\r\n    addVariation,\r\n    undoMove,\r\n  };\r\n};\r\n\r\nexport default usePGN;\r\n","import { useEffect, useState } from \"react\";\r\nimport {\r\n  ChessInstance,\r\n  Move,\r\n  Piece,\r\n  PieceType,\r\n  ShortMove,\r\n  Square,\r\n} from \"chess.js\";\r\nimport {\r\n  Color,\r\n  Dests,\r\n  Key,\r\n  MoveMetadata,\r\n  Role,\r\n  SetPremoveMetadata,\r\n  Elements,\r\n} from \"chessground/types\";\r\nimport { fenToObj, parseJSON } from \"../utils/utils\";\r\nimport {\r\n  BOARD_MOVE_UNDO,\r\n  BOARD_MOVE_UPDATE,\r\n} from \"../constants/chessMultiplayerMsgTypes\";\r\nimport usePGN from \"./usePGN\";\r\n\r\nconst Chess = require(\"chess.js\");\r\n// const Chess = require(\"../packages/chess-es6.js/src/chess.js\");\r\n// const Chess = require(\"../packages/chess.js/chess.js\");\r\ninterface IMovable {\r\n  free?: boolean; // all moves are valid - board editor\r\n  color?: Color | \"both\"; // color that can move. white | black | both | undefined\r\n  dests?: Dests; // valid moves. {\"a2\" [\"a3\" \"a4\"] \"b1\" [\"a3\" \"c3\"]}\r\n  showDests?: boolean; // whether to add the move-dest class on squares\r\n  events?: {\r\n    after?: (orig: Key, dest: Key, metadata: MoveMetadata) => void; // called after the move has been played\r\n    afterNewPiece?: (role: Role, key: Key, metadata: MoveMetadata) => void; // called after a new piece is dropped on the board\r\n  };\r\n  rookCastle?: boolean; // castle by moving the king to the rook\r\n}\r\n\r\ninterface IDraggable {\r\n  enabled?: boolean; // allow moves & premoves to use drag'n drop\r\n  distance?: number; // minimum distance to initiate a drag; in pixels\r\n  autoDistance?: boolean; // lets chessground set distance to zero when user drags pieces\r\n  showGhost?: boolean; // show ghost of piece being dragged\r\n  deleteOnDropOff?: boolean; // delete a piece when it is dropped off the board\r\n}\r\n\r\ninterface IPremovable {\r\n  enabled?: boolean; // allow premoves for color that can not move\r\n  showDests?: boolean; // whether to add the premove-dest class on squares\r\n  castle?: boolean; // whether to allow king castle premoves\r\n  dests?: Key[]; // premove destinations for the current selection\r\n  events?: {\r\n    set?: (orig: Key, dest: Key, metadata?: SetPremoveMetadata) => void; // called after the premove has been set\r\n    unset?: () => void; // called after the premove has been unset\r\n  };\r\n}\r\ninterface IPredroppable {\r\n  enabled?: boolean; // allow predrops for color that can not move\r\n  events?: {\r\n    set?: (role: Role, key: Key) => void; // called after the predrop has been set\r\n    unset?: () => void; // called after the predrop has been unset\r\n  };\r\n}\r\ninterface IEvents {\r\n  change?: () => void; // called after the situation changes on the board\r\n  // called after a piece has been moved.\r\n  // capturedPiece is undefined or like {color: 'white'; 'role': 'queen'}\r\n  move?: (orig: Key, dest: Key, capturedPiece?: Piece) => void;\r\n  dropNewPiece?: (piece: Piece, key: Key) => void;\r\n  select?: (key: Key) => void; // called when a square is selected\r\n  insert?: (elements: Elements) => void; // when the board DOM has been (re)inserted\r\n}\r\n\r\nconst defaultFen = \"rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1\";\r\n\r\nconst useChess = (Agora: any, Multiplayer: any) => {\r\n  const [chess] = useState<any>(new Chess(defaultFen));\r\n  const PGN = usePGN();\r\n  const [promotionModal, setPromotionModal] = useState<boolean>(false);\r\n  const [state, setState] = useState<{\r\n    turn: \"w\" | \"b\";\r\n    fen: string;\r\n    orientation: \"white\" | \"black\";\r\n    pendingMove: { sourceSquare: Square; targetSquare: Square } | undefined;\r\n    dropSquareStyle: any;\r\n    squareStyles: any;\r\n    pieceSquare: any;\r\n    square: string;\r\n    history: Move[];\r\n    boardPosition: any;\r\n    pgn: string;\r\n    undoMovesArray: Move[];\r\n  }>({\r\n    turn: chess.turn() || \"w\",\r\n    fen: \"start\",\r\n    orientation: \"white\",\r\n    pendingMove: undefined,\r\n    // square styles for active drop square\r\n    dropSquareStyle: {},\r\n    // custom square styles\r\n    squareStyles: {},\r\n    // square with the currently clicked piece\r\n    pieceSquare: \"\",\r\n    // currently clicked square\r\n    square: \"\",\r\n    // array of past game moves\r\n    history: [],\r\n    boardPosition: {},\r\n    pgn: \"\",\r\n    undoMovesArray: [],\r\n  });\r\n  useEffect(() => {\r\n    if (\r\n      chess &&\r\n      Object.fromEntries(new URLSearchParams(window.location.search).entries())\r\n        .fen\r\n    ) {\r\n      chess.load(\r\n        Object.fromEntries(\r\n          new URLSearchParams(window.location.search).entries()\r\n        ).fen\r\n      );\r\n      setState({\r\n        ...state,\r\n        fen: Object.fromEntries(\r\n          new URLSearchParams(window.location.search).entries()\r\n        ).fen,\r\n      });\r\n    }\r\n  }, [chess]);\r\n  // useEffect(() => {\r\n  //   console.log(\"SQUARE_STYLES: \", state.squareStyles);\r\n  // }, [state.squareStyles]);\r\n\r\n  useEffect(() => {\r\n    console.log(\r\n      \"POSITION: \",\r\n      state.boardPosition,\r\n      chess.in_check(),\r\n      chess.turn()\r\n    );\r\n    chess.in_check() && inCheck(chess.turn());\r\n  }, [state.boardPosition]);\r\n\r\n  useEffect(() => {\r\n    console.log(\"UNDO MOVES: \", state.undoMovesArray);\r\n  }, [state.undoMovesArray]);\r\n\r\n  useEffect(() => {\r\n    if (Agora.channel) {\r\n      Agora.channel?.on(\"ChannelMessage\", (message: any) => {\r\n        const data = parseJSON(message.text);\r\n        // console.log(\"MESSAGE DATA: \", data);\r\n        switch (data.type) {\r\n          case BOARD_MOVE_UPDATE:\r\n            onDrop({\r\n              sourceSquare: data.json.move.from,\r\n              targetSquare: data.json.move.to,\r\n            });\r\n            break;\r\n          case BOARD_MOVE_UNDO:\r\n            const parametersObj = {\r\n              chess,\r\n              state,\r\n              setState,\r\n              undoArray: data.json.undoArray,\r\n            };\r\n            PGN.undoMove();\r\n            Multiplayer.undoMove(parametersObj);\r\n            break;\r\n          default:\r\n            console.log(\"INVALID OPERATION\");\r\n            break;\r\n        }\r\n      });\r\n    }\r\n  }, [Agora.channel]);\r\n  useEffect(() => {\r\n    console.log(\"PGN: \", state.pgn);\r\n  }, [state.pgn]);\r\n\r\n  const showPromotionModal = () => setPromotionModal(true);\r\n  const hidePromotionModal = () => setPromotionModal(false);\r\n\r\n  const setBoardPosition = (position: any) => {\r\n    setState({\r\n      ...state,\r\n      boardPosition: position,\r\n    });\r\n  };\r\n\r\n  const reset = () => {\r\n    chess.reset();\r\n    setState({\r\n      ...state,\r\n      fen: defaultFen,\r\n      boardPosition: fenToObj(defaultFen),\r\n    });\r\n  };\r\n\r\n  const flip = () => {\r\n    setState({\r\n      ...state,\r\n      orientation: state.orientation === \"white\" ? \"black\" : \"white\",\r\n    });\r\n  };\r\n\r\n  const promotion = (\r\n    sourceSquare: Square,\r\n    targetSquare: Square,\r\n    e?: Exclude<PieceType, \"p\" | \"k\">\r\n  ) => {\r\n    const from = sourceSquare;\r\n    const to = targetSquare;\r\n    chess.move({ from, to, promotion: e });\r\n    setState({\r\n      ...state,\r\n      fen: chess.fen(),\r\n      pendingMove: undefined,\r\n    });\r\n    hidePromotionModal();\r\n  };\r\n\r\n  const removeHighlightSquare = () => {\r\n    const currKingPieceSquare = Object.keys(state.boardPosition).find(\r\n      (key: string) => state.boardPosition[key] === `${chess.turn()}K`\r\n    );\r\n    setState(({ pieceSquare, history }) => ({\r\n      ...state,\r\n      squareStyles:\r\n        chess.in_check() && currKingPieceSquare\r\n          ? { [currKingPieceSquare]: state.squareStyles[currKingPieceSquare] }\r\n          : squareStyling({ pieceSquare, history }),\r\n    }));\r\n  };\r\n\r\n  // show possible moves\r\n  const highlightSquare = (\r\n    sourceSquare: Square,\r\n    squaresToHighlight: string[]\r\n  ) => {\r\n    const highlightStyles = [sourceSquare, ...squaresToHighlight].reduce(\r\n      (a, c) => {\r\n        return {\r\n          ...a,\r\n          ...{\r\n            [c]: {\r\n              background:\r\n                \"radial-gradient(circle, rgb(123,97,255,0.5) 20%, transparent 0%)\",\r\n              borderRadius: \"50%\",\r\n            },\r\n          },\r\n          ...squareStyling({\r\n            history: state.history,\r\n            pieceSquare: state.pieceSquare,\r\n          }),\r\n        };\r\n      },\r\n      {}\r\n    );\r\n\r\n    setState(({ squareStyles }) => ({\r\n      ...state,\r\n      squareStyles: { ...squareStyles, ...highlightStyles },\r\n    }));\r\n  };\r\n\r\n  const inCheck = (turn: string) => {\r\n    const checkedKingPos: any = Object.keys(state.boardPosition).find(\r\n      (key: string) => state.boardPosition[key] === `${turn}K`\r\n    );\r\n    console.log(\r\n      \"INCHECK: \",\r\n      Object.keys(state.boardPosition).find(\r\n        (key: string) => state.boardPosition[key] === `${turn}K`\r\n      )\r\n    );\r\n    setState({\r\n      ...state,\r\n      squareStyles: {\r\n        ...state.squareStyles,\r\n        [checkedKingPos]: { backgroundColor: \"red\" },\r\n      },\r\n    });\r\n  };\r\n\r\n  const onMouseOutSquare = (square: Square) => {\r\n    removeHighlightSquare();\r\n  };\r\n\r\n  const onMouseOverSquare = (square: Square) => {\r\n    // get list of possible moves for this square\r\n    let moves = chess.moves({\r\n      square,\r\n      verbose: true,\r\n    });\r\n\r\n    // exit if there are no moves available for this square\r\n    console.log(\"MOVES: \", moves);\r\n    if (moves.length === 0) return;\r\n\r\n    let squaresToHighlight = [];\r\n    for (const move of moves) {\r\n      squaresToHighlight.push(move.to);\r\n    }\r\n    // console.log(\"SQUARESTOHIGHLIGHT: \", squaresToHighlight);\r\n    highlightSquare(square, squaresToHighlight);\r\n  };\r\n\r\n  const onDrop = ({\r\n    sourceSquare,\r\n    targetSquare,\r\n    piece,\r\n  }: {\r\n    sourceSquare: Square;\r\n    targetSquare: Square;\r\n    piece?: string;\r\n  }) => {\r\n    // see if the move is legal\r\n    let move = chess.move({\r\n      from: sourceSquare,\r\n      to: targetSquare,\r\n      // promotion: \"q\", // always promote to a queen for example simplicity\r\n    });\r\n    console.log(\"MOVE: \", move);\r\n    const moves = chess.moves({ verbose: true });\r\n    for (let i = 0, len = moves.length; i < len; i++) {\r\n      /* eslint-disable-line */\r\n      if (\r\n        moves[i].flags.indexOf(\"p\") !== -1 &&\r\n        moves[i].from === sourceSquare\r\n      ) {\r\n        setState({\r\n          ...state,\r\n          pendingMove: { sourceSquare, targetSquare },\r\n        });\r\n        // console.log(\"opening promotional modal\");\r\n        // promotion(sourceSquare, targetSquare, \"r\");\r\n        showPromotionModal();\r\n        return;\r\n      }\r\n    }\r\n\r\n    // illegal move\r\n    if (move === null) return;\r\n    // console.log(\"usePGN LASTMOVE: \", PGN.lastMove);\r\n    if (\r\n      PGN.lastMove?.next !== undefined &&\r\n      PGN.lastMove?.next?.san !== move.san\r\n    ) {\r\n      PGN.addVariation(PGN.lastMove, move, chess.fen());\r\n    } else {\r\n      // console.log(\"usePGN ELSE STATEMENT\");\r\n      PGN.addMove(move, chess.fen());\r\n    }\r\n    setState(({ history, pieceSquare }) => ({\r\n      ...state,\r\n      turn: chess.turn(),\r\n      fen: chess.fen(),\r\n      pgn: chess.pgn(),\r\n      history: chess.history({ verbose: true }),\r\n      squareStyles: squareStyling({ pieceSquare, history }),\r\n    }));\r\n    const fens: any[] = [];\r\n    moves.forEach((m: any) => {\r\n      chess.move(m);\r\n      fens.push(chess.fen());\r\n      chess.undo();\r\n    });\r\n    console.log(\"FENS: \", fens);\r\n    Multiplayer.updateBoard(move);\r\n  };\r\n\r\n  const onSquareClick = (square: Square) => {\r\n    setState(({ history }) => ({\r\n      ...state,\r\n      squareStyles: {\r\n        ...state.squareStyles,\r\n        ...squareStyling({ pieceSquare: square, history }),\r\n      },\r\n      pieceSquare: square,\r\n    }));\r\n    let move = chess.move({\r\n      from: state.pieceSquare,\r\n      to: square,\r\n      // promotion: \"q\", // always promote to a queen for example simplicity\r\n    });\r\n\r\n    const moves = chess.moves({ verbose: true });\r\n    // const pieceMoves = chess.moves({ square, verbose: true });\r\n    // let squaresToHighlight = [];\r\n    // for (const m of pieceMoves) {\r\n    //   squaresToHighlight.push(m.to);\r\n    // }\r\n    // highlightSquare(square, squaresToHighlight);\r\n\r\n    for (let i = 0, len = moves.length; i < len; i++) {\r\n      /* eslint-disable-line */\r\n      if (moves[i].flags.includes(\"p\") && moves[i].from === state.pieceSquare) {\r\n        setState({\r\n          ...state,\r\n          pendingMove: {\r\n            sourceSquare: state.pieceSquare,\r\n            targetSquare: square,\r\n          },\r\n        });\r\n        // promotion(state.pieceSquare, square, \"q\");\r\n        showPromotionModal();\r\n        return;\r\n      }\r\n    }\r\n\r\n    // illegal move\r\n    if (move === null) return;\r\n\r\n    PGN.addMove(move, chess.fen());\r\n    setState({\r\n      ...state,\r\n      turn: chess.turn(),\r\n      fen: chess.fen(),\r\n      pgn: chess.pgn(),\r\n      history: chess.history({ verbose: true }),\r\n      pieceSquare: \"\",\r\n    });\r\n    Multiplayer.updateBoard(move);\r\n  };\r\n\r\n  // central squares get diff dropSquareStyles\r\n  const onDragOverSquare = (square: Square) => {\r\n    setState({\r\n      ...state,\r\n      dropSquareStyle:\r\n        square === \"e4\" || square === \"d4\" || square === \"e5\" || square === \"d5\"\r\n          ? { backgroundColor: \"cornFlowerBlue\" }\r\n          : { boxShadow: \"inset 0 0 1px 4px rgb(255, 255, 0)\" },\r\n    });\r\n  };\r\n\r\n  const onSquareRightClick = (square: Square) =>\r\n    setState({\r\n      ...state,\r\n      squareStyles: { [square]: { backgroundColor: \"deepPink\" } },\r\n    });\r\n\r\n  const undoMove = () => {\r\n    const undoMoveObj = chess.undo();\r\n    if (undoMoveObj) {\r\n      PGN.undoMove();\r\n      setState({\r\n        ...state,\r\n        fen: chess.fen(),\r\n        undoMovesArray: [...state.undoMovesArray, undoMoveObj],\r\n      });\r\n      Multiplayer.undoMoveMsg([...state.undoMovesArray, undoMoveObj]);\r\n    }\r\n  };\r\n  const redoMove = () => {\r\n    if (state.undoMovesArray.length === 0) return;\r\n    const redoMoveObj: Move | undefined = state.undoMovesArray.pop();\r\n    console.log(\"REDO: \", redoMoveObj);\r\n    if (redoMoveObj) {\r\n      const move = chess.move(redoMoveObj);\r\n      console.log(\"REDONE: \", move);\r\n      if (move !== null) {\r\n        setState(({ history, pieceSquare }) => ({\r\n          ...state,\r\n          fen: chess.fen(),\r\n          pgn: chess.pgn(),\r\n          history: chess.history({ verbose: true }),\r\n          squareStyles: squareStyling({ pieceSquare, history }),\r\n          // undoMovesArray: ,\r\n        }));\r\n\r\n        Multiplayer.updateBoard(move);\r\n      }\r\n    }\r\n  };\r\n\r\n  return {\r\n    turn: state.turn,\r\n    fen: state.fen,\r\n    pgn: state.pgn,\r\n    history: state.history,\r\n    orientation: state.orientation,\r\n    squareStyles: state.squareStyles,\r\n    pendingMove: state.pendingMove,\r\n    promotionModal,\r\n    setBoardPosition,\r\n    reset,\r\n    flip,\r\n    onDrop,\r\n    onMouseOverSquare,\r\n    onMouseOutSquare,\r\n    onDragOverSquare,\r\n    onSquareClick,\r\n    onSquareRightClick,\r\n    undoMove,\r\n    redoMove,\r\n    promotion,\r\n  };\r\n};\r\n\r\nconst squareStyling = ({\r\n  pieceSquare,\r\n  history,\r\n}: {\r\n  pieceSquare: any;\r\n  history: any;\r\n}) => {\r\n  const sourceSquare = history.length && history[history.length - 1].from;\r\n  const targetSquare = history.length && history[history.length - 1].to;\r\n\r\n  return {\r\n    [pieceSquare]: { backgroundColor: \"rgba(123,97,255,0.5)\" },\r\n    // ...(history.length && {\r\n    //   [sourceSquare]: {\r\n    //     backgroundColor: \"rgba(123,97,255,0.5)\",\r\n    //   },\r\n    // }),\r\n    ...(history.length && {\r\n      [targetSquare]: {\r\n        backgroundColor: \"rgba(123,97,255,0.5)\",\r\n      },\r\n    }),\r\n  };\r\n};\r\n\r\nexport default useChess;\r\n\r\n// To show promotional Modal or not\r\n// const showPromotionModal = () => setPromotionModal(true);\r\n// const hidePromotionModal = () => setPromotionModal(false);\r\n\r\n// const handleMove = (move: ShortMove) => {\r\n//   const moves = chess.moves({ verbose: true });\r\n\r\n//   for (let i = 0, len = moves.length; i < len; i++) {\r\n//     /* eslint-disable-line */\r\n//     if (moves[i].flags.indexOf(\"p\") !== -1 && moves[i].from === move.from) {\r\n//       setPendingMove([move.from, move.to]);\r\n//       // showPromotionModal();\r\n//       return;\r\n//     }\r\n//   }\r\n//   const moveVerbose = chess.move(move);\r\n//   if (moveVerbose) {\r\n//     setFen(chess.fen());\r\n//     Multiplayer.updateBoard(move);\r\n//   }\r\n// };\r\n\r\n// const calcMovable = (): IMovable => {\r\n//   const dests = new Map();\r\n//   chess.SQUARES.forEach((s) => {\r\n//     const ms = chess.moves({ square: s, verbose: true });\r\n//     if (ms.length)\r\n//       dests.set(\r\n//         s,\r\n//         ms.map((m) => m.to)\r\n//       );\r\n//   });\r\n\r\n//   return {\r\n//     free: false,\r\n//     dests: dests,\r\n//     showDests: true,\r\n//     events: {\r\n//       after: (from: any, to: any, metadeta: any) => {\r\n//         // console.log(\"metadata: \", { from, to, metadeta });\r\n//         return handleMove({ from: from, to: to });\r\n//       },\r\n//       afterNewPiece: (role: Role, key: Key, metaData: MoveMetadata) => {\r\n//         console.log(\"afterNewPiece: \", role, key, metaData);\r\n//       },\r\n//     },\r\n//     rookCastle: true,\r\n//   };\r\n// };\r\n\r\n// const calcDraggable = (): IDraggable => ({\r\n//   enabled: true,\r\n//   showGhost: false,\r\n//   deleteOnDropOff: false,\r\n// });\r\n","import { stringifyJSON } from \"./utils\";\r\nimport { RtmTextMessage } from \"agora-rtm-sdk\";\r\n\r\nconst messageParser = (json: any): RtmTextMessage => ({\r\n  text: stringifyJSON(json),\r\n  messageType: \"TEXT\",\r\n});\r\n\r\nconst agoraUtils = {\r\n  messageParser,\r\n};\r\n\r\nexport default agoraUtils;\r\n","import AgoraRTM, {\r\n  RtmChannel,\r\n  RtmClient,\r\n  RtmMessage,\r\n  RtmTextMessage,\r\n} from \"agora-rtm-sdk\";\r\nimport axios from \"axios\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { parseJSON } from \"../utils/utils\";\r\nimport agoraUtils from \"../utils/agoraUtils\";\r\n\r\nconst useAgora = () => {\r\n  const [channel, setChannel] = useState<RtmChannel | null>(null);\r\n  const appId = \"f4b36b6c897e41bfaa3904d75da40777\";\r\n  const client: RtmClient | null = AgoraRTM.createInstance(appId);\r\n  let playerMeta = {\r\n    uid: (Math.floor(Math.random() * 90000) + 10000).toString(),\r\n    token: \"\",\r\n  };\r\n\r\n  useEffect(() => {\r\n    const playerLogin = async () => {\r\n      axios\r\n        .get(\r\n          `https://agoratokenserver-demo.herokuapp.com/access_token?channel=test&uid=${playerMeta.uid}`\r\n        )\r\n        .then((res: any) => {\r\n          console.log(res);\r\n          playerMeta.token = res.data?.token || \"\";\r\n          // console.log(\"LOGIN OPTIONS: \", playerMeta);\r\n          client.login(playerMeta).then(() => {\r\n            console.log(\"Login successful\");\r\n            const newChannel = client.createChannel(\"test\");\r\n            newChannel.join();\r\n            setChannel(newChannel);\r\n          });\r\n        });\r\n    };\r\n\r\n    playerLogin().then(() => {\r\n      console.log(\"integrations successful\");\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (channel) {\r\n      // channel?.on(\"ChannelMessage\", (message: any) => {\r\n      //   const data = parseJSON(message.text);\r\n      //   console.log(\"MESSAGE DATA: \", data);\r\n      // });\r\n\r\n      channel?.on(\"MemberJoined\", (memberId) => {\r\n        console.log(\"New member joined: \", memberId);\r\n      });\r\n      channel?.on(\"MemberLeft\", (memberId) => {\r\n        console.log(\"Member left: \", memberId);\r\n      });\r\n    }\r\n  }, [channel]);\r\n\r\n  const sendChannelMessage = (data: any, type: string) => {\r\n    const message = {\r\n      uid: playerMeta.uid,\r\n      json: data || {},\r\n      type,\r\n    };\r\n    console.log(agoraUtils.messageParser(message));\r\n    channel?.sendMessage(agoraUtils.messageParser(message)).then(() => {});\r\n  };\r\n\r\n  return { channel, playerMeta, sendChannelMessage };\r\n};\r\n\r\nexport default useAgora;\r\n","import { ChessInstance, Move, ShortMove } from \"chess.js\";\r\nimport React, { useEffect } from \"react\";\r\nimport {\r\n  BOARD_MOVE_UNDO,\r\n  BOARD_MOVE_UPDATE,\r\n} from \"../constants/chessMultiplayerMsgTypes\";\r\nimport { IMultiplayerProps } from \"../types/chessMultiplayer\";\r\nimport { parseJSON } from \"../utils/utils\";\r\n\r\ninterface IProps {\r\n  Agora: any;\r\n}\r\n\r\nconst useChessMultiplayer = (props: IProps) => {\r\n  const { Agora } = props;\r\n\r\n  const updateBoard = (move: ShortMove) => {\r\n    const updateObject = {\r\n      move: move,\r\n    };\r\n    Agora?.sendChannelMessage(updateObject, BOARD_MOVE_UPDATE);\r\n  };\r\n  const undoMoveMsg = (undoArray: Move[]) => {\r\n    const updateObject = {\r\n      undoArray: undoArray,\r\n    };\r\n    Agora?.sendChannelMessage(updateObject, BOARD_MOVE_UNDO);\r\n  };\r\n  const undoMove = ({\r\n    chess,\r\n    state,\r\n    setState,\r\n    undoArray,\r\n  }: {\r\n    chess: ChessInstance;\r\n    state: any;\r\n    setState: any;\r\n    undoArray: Move[];\r\n  }) => {\r\n    const undoMoveObj = chess.undo();\r\n    if (undoMoveObj) {\r\n      setState({\r\n        ...state,\r\n        fen: chess.fen(),\r\n        undoMovesArray: undoArray,\r\n      });\r\n    }\r\n  };\r\n\r\n  return { updateBoard, undoMoveMsg, undoMove };\r\n};\r\n\r\nexport default useChessMultiplayer;\r\n","import { useEffect, useState } from \"react\";\r\nimport {\r\n  ChessInstance,\r\n  Move,\r\n  Piece,\r\n  PieceType,\r\n  ShortMove,\r\n  Square,\r\n} from \"chess.js\";\r\nimport { fenToObj, objToFen, parseJSON, styleToString } from \"../utils/utils\";\r\nimport { BOARD_MOVE_UPDATE } from \"../constants/chessMultiplayerMsgTypes\";\r\n\r\nconst Chess = require(\"chess.js\");\r\n\r\nconst defaultFen = \"rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1\";\r\nconst emptyBoardFen = \"8/8/8/8/8/8/8/8\";\r\n\r\nconst useBoardEditor = () => {\r\n  const [chess] = useState<ChessInstance>(new Chess(defaultFen));\r\n  const [state, setState] = useState<{\r\n    fen: string;\r\n    orientation: \"white\" | \"black\";\r\n    dropSquareStyle: any;\r\n    squareStyles: any;\r\n    pieceSquare: any;\r\n    square: string;\r\n    history: Move[];\r\n    boardPosition: any;\r\n    pgn: any;\r\n  }>({\r\n    fen: defaultFen,\r\n    orientation: \"white\",\r\n    // square styles for active drop square\r\n    dropSquareStyle: {},\r\n    // custom square styles\r\n    squareStyles: {},\r\n    // square with the currently clicked piece\r\n    pieceSquare: \"\",\r\n    // currently clicked square\r\n    square: \"\",\r\n    // array of past game moves\r\n    history: [],\r\n    boardPosition: fenToObj(defaultFen),\r\n    pgn: [],\r\n  });\r\n\r\n  // useEffect(() => {\r\n  //   console.log(\"ORIENTATION: \", state.orientation);\r\n  // }, [state.orientation]);\r\n\r\n  useEffect(() => {\r\n    console.log(\"BOARD_POSITION: \", objToFen(state.boardPosition));\r\n  }, [state.boardPosition]);\r\n\r\n  const setFenPosition = (fenString: string) => {\r\n    setState({\r\n      ...state,\r\n      fen: fenString,\r\n      boardPosition: fenToObj(fenString),\r\n    });\r\n  };\r\n\r\n  const setBoardPosition = (position: any) => {\r\n    setState({\r\n      ...state,\r\n      fen: objToFen(position) || state.fen,\r\n      boardPosition: position,\r\n    });\r\n  };\r\n\r\n  const reset = () => {\r\n    setState({\r\n      ...state,\r\n      fen: defaultFen,\r\n      boardPosition: fenToObj(defaultFen),\r\n    });\r\n  };\r\n  const clear = () => {\r\n    setState({\r\n      ...state,\r\n      fen: emptyBoardFen,\r\n      boardPosition: fenToObj(emptyBoardFen),\r\n    });\r\n  };\r\n\r\n  const flip = () => {\r\n    setState({\r\n      ...state,\r\n      orientation: state.orientation === \"white\" ? \"black\" : \"white\",\r\n    });\r\n  };\r\n\r\n  const onDrop = ({\r\n    sourceSquare,\r\n    targetSquare,\r\n    piece,\r\n  }: {\r\n    sourceSquare: Square | string;\r\n    targetSquare: Square;\r\n    piece?: string;\r\n  }) => {\r\n    console.log(\"EDITOR_ON_DROP: \", sourceSquare, targetSquare, piece);\r\n    let boardPosition;\r\n    boardPosition =\r\n      sourceSquare === \"spare\"\r\n        ? {\r\n            ...state.boardPosition,\r\n            [targetSquare]: piece,\r\n          }\r\n        : {\r\n            ...Object.fromEntries(\r\n              Object.entries(state.boardPosition).filter(\r\n                ([key, value]: [key: any, value: any]) => key !== sourceSquare\r\n              )\r\n            ),\r\n            [targetSquare]: piece,\r\n          };\r\n    console.log(\"BOARD_POSITION: \", boardPosition);\r\n    setState({\r\n      ...state,\r\n      fen: objToFen(boardPosition) || state.fen,\r\n      boardPosition,\r\n    });\r\n  };\r\n\r\n  return {\r\n    fen: state.fen,\r\n    pgn: state.pgn,\r\n    boardPosition: state.boardPosition,\r\n    orientation: state.orientation,\r\n    onDrop,\r\n    setBoardPosition,\r\n    setFenPosition,\r\n    reset,\r\n    clear,\r\n    flip,\r\n  };\r\n};\r\n\r\nexport default useBoardEditor;\r\n","import styled, { css } from \"styled-components\";\r\n\r\nconst chessboardEditorSidePanelStyle = css`\r\n  background-color: #2b2b34;\r\n  width: 386px;\r\n  border-radius: 0px 16px 16px 0px;\r\n`;\r\n\r\nexport const ScChessSidePanel = styled.div<{\r\n  editorMode: boolean;\r\n}>`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n  ${({ editorMode }) => editorMode && chessboardEditorSidePanelStyle}\r\n`;\r\n\r\nexport const GamePlayPanel1 = styled.div`\r\n  div {\r\n    padding: 14px;\r\n    cursor: pointer;\r\n  }\r\n`;\r\nexport const GamePlayPanel2 = styled.div`\r\n  div {\r\n    padding: 14px;\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nexport const ScChessHistoryPanel = styled.div`\r\n  position: relative;\r\n  /* width: 176px; */\r\n  /* height: 242px; */\r\n  background: #2b2b34;\r\n  border: 1.46px solid #424242;\r\n  box-sizing: border-box;\r\n  padding: 10px 0px;\r\n  .title {\r\n    display: flex;\r\n    margin-left: 10px;\r\n    img {\r\n      margin-right: 3px;\r\n    }\r\n    font-weight: bold;\r\n    font-size: 18px;\r\n    line-height: 21px;\r\n    color: #ffffff;\r\n    margin-bottom: 11px;\r\n  }\r\n  .pgn-section {\r\n    width: 100%;\r\n    padding: 10px;\r\n    /* .error {\r\n      display: none;\r\n      height: 0px;\r\n    }\r\n    .outerBoard {\r\n      display: none;\r\n      height: 0px; \r\n    }*/\r\n    .moves {\r\n      color: white;\r\n      font-size: 10px;\r\n      move-number {}\r\n      move {\r\n        color: white;\r\n      }\r\n    }\r\n    .comment {\r\n      .commentRadio {\r\n        color: white;\r\n        display: flex;\r\n        flex-direction: row;\r\n        justify-content: flex-start;\r\n        align-items: center;\r\n        margin: 5px 0px;\r\n          margin-right: 12px;\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const ScSidePanelNav = styled.div`\r\n  position: relative;\r\n  /* bottom: -52px; */\r\n  bottom: -1px;\r\n  left: -1.46px;\r\n  /* width: 176px; */\r\n  height: 51px;\r\n  background: #2b2b34;\r\n  border: 1.46px solid #424242;\r\n  /* border-top: 0px; */\r\n  border-bottom: 0px;\r\n  box-sizing: border-box;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  padding: 13.14px;\r\n  img {\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nexport const EditorSidePanel = styled.div`\r\n  padding: 26px;\r\n  height: 100%;\r\n  .title {\r\n    font-style: normal;\r\n    font-weight: bold;\r\n    font-size: 24px;\r\n    line-height: 29px;\r\n    color: #ffffff;\r\n  }\r\n  .divider {\r\n    width: 100%;\r\n    height: 0.5px;\r\n    background: #ffffff;\r\n    opacity: 0.1;\r\n    margin: 13.5px 0;\r\n    margin-bottom: 156px;\r\n  }\r\n  .slider {\r\n    width: 100%;\r\n    height: 32px;\r\n    background: #e8edf9;\r\n    border-radius: 10px;\r\n    display: flex;\r\n    /* margin-bottom: 156px; */\r\n    div {\r\n      width: 50%;\r\n      display: flex;\r\n      align-items: center;\r\n      justify-content: center;\r\n    }\r\n  }\r\n  label {\r\n    margin-bottom: 8px;\r\n    font-weight: 500;\r\n    font-size: 13px;\r\n    line-height: 16px;\r\n    text-transform: uppercase;\r\n    color: #ffffff;\r\n    opacity: 0.4;\r\n  }\r\n  .input-fen {\r\n    display: flex;\r\n    width: 100%;\r\n    margin-bottom: 24px;\r\n    input {\r\n      width: 100%;\r\n      height: 32px;\r\n      border-radius: 8px;\r\n    }\r\n  }\r\n  .output-fen {\r\n    display: flex;\r\n    align-items: center;\r\n    width: 100%;\r\n    height: 32px;\r\n    border-radius: 8px;\r\n    background: #ffffff;\r\n    overflow: hidden;\r\n    margin-bottom: 24px;\r\n    text-overflow: ellipsis;\r\n  }\r\n  .btn-panel {\r\n    display: flex;\r\n    width: 100%;\r\n    justify-content: space-between;\r\n    button {\r\n      width: 32%;\r\n      height: 40px;\r\n      color: #ffffff;\r\n      font-weight: 600;\r\n      font-size: 17px;\r\n      line-height: 20px;\r\n      background: #5656ff;\r\n      border: 1px solid rgba(255, 255, 255, 0.4);\r\n      box-sizing: border-box;\r\n      border-radius: 10px;\r\n    }\r\n  }\r\n`;\r\n\r\nconst chessboardEditorModeStyle = css`\r\n  div[class$=\"-spare-pieces\"] {\r\n    position: absolute;\r\n    width: 340px;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    div[data-testid^=\"spare-\"]:nth-child(odd) {\r\n      background: #b7c0d8;\r\n    }\r\n    div[data-testid^=\"spare-\"]:nth-child(even) {\r\n      background: #e8edf9;\r\n    }\r\n    div {\r\n      /* width: 100%; */\r\n      margin: 2px;\r\n      border-radius: 12px;\r\n      div {\r\n        img {\r\n          padding: 8px 10px;\r\n          width: 26px !important;\r\n          height: 28px !important;\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const ScPromotionModal = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  background: #2b2b34;\r\n  padding: 10px;\r\n  border-radius: 12px;\r\n  z-index: 6;\r\n  div:nth-child(odd) {\r\n    background: #b7c0d8;\r\n  }\r\n  div:nth-child(even) {\r\n    background: #e8edf9;\r\n  }\r\n  div {\r\n    margin: 2px;\r\n    border-radius: 12px;\r\n    img {\r\n      cursor: pointer;\r\n      padding: 8px 10px;\r\n      width: 26px;\r\n      height: 28px;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const ScChessInterface = styled.div<{\r\n  dimension: number | undefined;\r\n  editorMode?: boolean;\r\n}>`\r\n  display: flex;\r\n  /* width: 1000px; */\r\n  /* height: fit-content; */\r\n  max-width: 1440px;\r\n  background: black;\r\n  grid-template-columns: 66% 37%;\r\n  grid-template-areas: \"board sidePanel\";\r\n  .board-container {\r\n    position: relative;\r\n    min-width: 500px;\r\n    min-height: 500px;\r\n    grid-area: board;\r\n    border: 10px solid rgba(255, 255, 255);\r\n    div {\r\n      ${({ editorMode }) => editorMode && chessboardEditorModeStyle}\r\n      .black-spare-pieces {\r\n        left: ${(props) =>\r\n          props.dimension ? `${props.dimension + 32}px` : \"0px\"};\r\n        bottom: ${(props) =>\r\n          props.dimension ? `${props.dimension - 130}px` : \"0px\"};\r\n\r\n        /* background:grey; */\r\n      }\r\n      .white-spare-pieces {\r\n        left: ${(props) =>\r\n          props.dimension ? `${props.dimension + 32}px` : \"0px\"};\r\n        bottom: ${(props) =>\r\n          props.dimension ? `${props.dimension - 190}px` : \"0px\"};\r\n        /* background:grey; */\r\n      }\r\n    }\r\n  }\r\n\r\n  ${ScChessSidePanel} {\r\n    grid-area: sidePanel;\r\n    /* width: 100%; */\r\n    /* height: 100%; */\r\n    ${GamePlayPanel1}, ${GamePlayPanel2} {\r\n      background: #2b2b34;\r\n      border: 2px solid rgba(255, 255, 255, 0.1);\r\n      border-radius: 0 8px 8px 0;\r\n    }\r\n  }\r\n`;\r\n\r\n// export const ScChessPgn = styled.div`\r\n//   color: white;\r\n// `;\r\n","export default __webpack_public_path__ + \"static/media/undoMove.586eb02f.svg\";","export default __webpack_public_path__ + \"static/media/redoMove.c6f42448.svg\";","export default __webpack_public_path__ + \"static/media/history.8223d0ff.svg\";","export default __webpack_public_path__ + \"static/media/resetBoard.7af0fcde.svg\";","export default __webpack_public_path__ + \"static/media/flipBoard.c1ef8478.svg\";","export default __webpack_public_path__ + \"static/media/loadGame.28f8774a.svg\";","export default __webpack_public_path__ + \"static/media/wK.3b342df8.svg\";","export default __webpack_public_path__ + \"static/media/wQ.785db365.svg\";","export default __webpack_public_path__ + \"static/media/wB.56f72474.svg\";","export default __webpack_public_path__ + \"static/media/wR.33cf0258.svg\";","export default __webpack_public_path__ + \"static/media/wN.d5fa39eb.svg\";","export default __webpack_public_path__ + \"static/media/wP.5f74a9fe.svg\";","export default __webpack_public_path__ + \"static/media/bK.e57316c7.svg\";","export default __webpack_public_path__ + \"static/media/bQ.c21470b8.svg\";","export default __webpack_public_path__ + \"static/media/bB.1f023e3e.svg\";","export default __webpack_public_path__ + \"static/media/bR.2724e583.svg\";","export default __webpack_public_path__ + \"static/media/bN.a46c4723.svg\";","export default __webpack_public_path__ + \"static/media/bP.d9262a65.svg\";","export default __webpack_public_path__ + \"static/media/arrowLeft.7e025148.svg\";","export default __webpack_public_path__ + \"static/media/arrowRight.ae8c68ee.svg\";","import React, { useLayoutEffect } from \"react\";\r\nimport * as uuid from \"uuid\";\r\nimport { pgnView, pgnEdit, pgnPrint } from \"@mliebelt/pgn-viewer\";\r\n\r\ninterface IProps {\r\n  pgn: string | undefined;\r\n  mode: string;\r\n}\r\nconst PGNViewer = ({ pgn, mode }: IProps) => {\r\n  const pgnConfig = {\r\n    pgn,\r\n    timerTime: \"1\",\r\n    startPlay: pgn\r\n      ?.split(/\\d\\./)\r\n      .join(\"\")\r\n      .split(\" \")\r\n      .filter((item: string) => item !== \"\").length,\r\n    showResult: true,\r\n    boardSize: \"160\",\r\n    showFen: false,\r\n    showCoords: false,\r\n    figurine: true,\r\n    movesHeight: \"78px\",\r\n    // layout: \"left\",\r\n    // pieceStyle: \"merida\",\r\n  };\r\n  const id = `board-0`;\r\n  useLayoutEffect(() => {\r\n    switch (mode) {\r\n      case \"view\":\r\n        pgnView(id, pgnConfig);\r\n        break;\r\n      case \"edit\":\r\n        pgnEdit(id, pgnConfig);\r\n        break;\r\n      case \"print\":\r\n        pgnPrint(id, pgnConfig);\r\n\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  });\r\n\r\n  return <div id={id}></div>;\r\n};\r\n\r\nconst areEqual = (prevProps: IProps, nextProps: IProps) => {\r\n  return prevProps.pgn === nextProps.pgn ? true : false;\r\n};\r\n\r\nexport default React.memo(PGNViewer, areEqual);\r\n","import React, { ChangeEvent, useEffect, useState } from \"react\";\r\nimport NativeChessboard from \"chessboardjsx\";\r\nimport useChess from \"../../hooks/useChess\";\r\nimport useAgora from \"../../hooks/useAgora\";\r\nimport useChessMultiplayer from \"../../hooks/useChessMultiplayer\";\r\nimport useBoardEditor from \"../../hooks/useBoardEditor\";\r\nimport { IChessboardProps } from \"../../types/chessboardTypes\";\r\nimport {\r\n  // ScChessPgn,\r\n  ScChessInterface,\r\n  ScChessSidePanel,\r\n  GamePlayPanel1,\r\n  GamePlayPanel2,\r\n  EditorSidePanel,\r\n  ScChessHistoryPanel,\r\n  ScSidePanelNav,\r\n  ScPromotionModal,\r\n} from \"../_StyledComponent/StyledComponent\";\r\nimport undoIcon from \"../../assets/images/sidePanelIcons/undoMove.svg\";\r\nimport redoIcon from \"../../assets/images/sidePanelIcons/redoMove.svg\";\r\nimport historyIcon from \"../../assets/images/sidePanelIcons/history.svg\";\r\nimport resetIcon from \"../../assets/images/sidePanelIcons/resetBoard.svg\";\r\nimport flipIcon from \"../../assets/images/sidePanelIcons/flipBoard.svg\";\r\nimport loadIcon from \"../../assets/images/sidePanelIcons/loadGame.svg\";\r\nimport wK from \"../../assets/images/chessPieces/wK.svg\";\r\nimport wQ from \"../../assets/images/chessPieces/wQ.svg\";\r\nimport wB from \"../../assets/images/chessPieces/wB.svg\";\r\nimport wR from \"../../assets/images/chessPieces/wR.svg\";\r\nimport wN from \"../../assets/images/chessPieces/wN.svg\";\r\nimport wP from \"../../assets/images/chessPieces/wP.svg\";\r\nimport bK from \"../../assets/images/chessPieces/bK.svg\";\r\nimport bQ from \"../../assets/images/chessPieces/bQ.svg\";\r\nimport bB from \"../../assets/images/chessPieces/bB.svg\";\r\nimport bR from \"../../assets/images/chessPieces/bR.svg\";\r\nimport bN from \"../../assets/images/chessPieces/bN.svg\";\r\nimport bP from \"../../assets/images/chessPieces/bP.svg\";\r\nimport arrowLeft from \"../../assets/images/arrowLeft.svg\";\r\nimport arrowRight from \"../../assets/images/arrowRight.svg\";\r\nimport PGNViewer from \"../PGNViewer/PGNViewer\";\r\n\r\ninterface Props {}\r\n\r\ninterface ICustomPieceProps {\r\n  squareWidth: number;\r\n  isDragging: boolean;\r\n}\r\n\r\nconst SidePanelMenu = ({\r\n  undoMove,\r\n  redoMove,\r\n  flip,\r\n  reset,\r\n  setSidePanelSection,\r\n}: {\r\n  undoMove: any;\r\n  redoMove: any;\r\n  flip: any;\r\n  reset: any;\r\n  setSidePanelSection: any;\r\n}) => (\r\n  <>\r\n    <GamePlayPanel1>\r\n      <div onClick={undoMove}>\r\n        <img src={undoIcon} alt=\"Undo\" />\r\n      </div>\r\n      <div onClick={redoMove}>\r\n        <img src={redoIcon} alt=\"Redo\" />\r\n      </div>\r\n      <div>\r\n        <img\r\n          src={historyIcon}\r\n          alt=\"History\"\r\n          onClick={() => {\r\n            setSidePanelSection(\"history\");\r\n          }}\r\n        />\r\n      </div>\r\n      <div>\r\n        <img src={resetIcon} alt=\"Reset\" onClick={reset} />\r\n      </div>\r\n      <div>\r\n        <img src={flipIcon} alt=\"Flip\" onClick={flip} />\r\n      </div>\r\n    </GamePlayPanel1>\r\n    <GamePlayPanel2>\r\n      <div>\r\n        <img src={loadIcon} alt=\"Load\" />\r\n      </div>\r\n    </GamePlayPanel2>\r\n  </>\r\n);\r\n\r\nconst ChessInterface = (props: Props) => {\r\n  const [dimension, setDimension] = useState<number>();\r\n  // const [undoMove, setUndoMove] = useState<boolean>(false);\r\n  const [editorMode, setEditorMode] = useState<boolean>(\r\n    (Object.fromEntries(new URLSearchParams(window.location.search).entries())\r\n      .editorMode === \"true\"\r\n      ? true\r\n      : false) || false\r\n  );\r\n  const [sidePanelSection, setSidePanelSection] = useState<string | undefined>(\r\n    \"menu\"\r\n  );\r\n  // const [overlay, setOverlay] = useState(new ChessboardArrows(\"board-0\"));\r\n\r\n  const Agora = useAgora();\r\n  const Multiplayer = useChessMultiplayer({\r\n    Agora,\r\n  });\r\n  const boardEditor = useBoardEditor();\r\n  const {\r\n    turn,\r\n    setBoardPosition,\r\n    reset,\r\n    flip,\r\n    orientation,\r\n    pendingMove,\r\n    fen,\r\n    pgn,\r\n    history,\r\n    promotionModal,\r\n    onDrop,\r\n    onMouseOverSquare,\r\n    onMouseOutSquare,\r\n    squareStyles,\r\n    onDragOverSquare,\r\n    onSquareClick,\r\n    onSquareRightClick,\r\n    undoMove,\r\n    redoMove,\r\n    promotion,\r\n  } = useChess(Agora, Multiplayer);\r\n  let firstChild: Element | null | undefined;\r\n  let lastChild: Element | null | undefined;\r\n\r\n  useEffect(() => {\r\n    updateDimensions();\r\n    window.addEventListener(\"resize\", updateDimensions);\r\n\r\n    return () => window.removeEventListener(\"resize\", updateDimensions);\r\n  }, []);\r\n  useEffect(() => {\r\n    const boardContainerDiv = window.document\r\n      .getElementById(\"board-container\")\r\n      ?.querySelector<HTMLElement>(\"div\");\r\n    //   ?.querySelector(\"div\")\r\n\r\n    firstChild = boardContainerDiv?.firstElementChild;\r\n    lastChild = boardContainerDiv?.lastElementChild;\r\n\r\n    if (firstChild && lastChild) {\r\n      firstChild.classList.add(\"black-spare-pieces\");\r\n      lastChild.classList.add(\"white-spare-pieces\");\r\n      firstChild.setAttribute(\"style\", \"\");\r\n      lastChild.setAttribute(\"style\", \"\");\r\n    }\r\n  }, [window.document.getElementById(\"board-container\")]);\r\n  // useEffect(() => {\r\n  //   console.log(\"HISTORY: \", history);\r\n  // }, [history]);\r\n  // useEffect(() => {\r\n\r\n  const updateDimensions = () => {\r\n    setDimension(\r\n      window.document.getElementById(\"board-container\")?.clientWidth\r\n    );\r\n  };\r\n\r\n  const customPieces = {\r\n    wK: ({ squareWidth, isDragging }: ICustomPieceProps) => (\r\n      <img\r\n        style={{\r\n          width: squareWidth,\r\n          height: squareWidth,\r\n        }}\r\n        src={wK}\r\n        alt={\"wK\"}\r\n      />\r\n    ),\r\n    wQ: ({ squareWidth, isDragging }: ICustomPieceProps) => (\r\n      <img\r\n        style={{\r\n          width: squareWidth,\r\n          height: squareWidth,\r\n        }}\r\n        src={wQ}\r\n        alt={\"wQ\"}\r\n      />\r\n    ),\r\n    wB: ({ squareWidth, isDragging }: ICustomPieceProps) => (\r\n      <img\r\n        style={{\r\n          width: squareWidth,\r\n          height: squareWidth,\r\n        }}\r\n        src={wB}\r\n        alt={\"wB\"}\r\n      />\r\n    ),\r\n    wR: ({ squareWidth, isDragging }: ICustomPieceProps) => (\r\n      <img\r\n        style={{\r\n          width: squareWidth,\r\n          height: squareWidth,\r\n        }}\r\n        src={wR}\r\n        alt={\"wR\"}\r\n      />\r\n    ),\r\n    wN: ({ squareWidth, isDragging }: ICustomPieceProps) => (\r\n      <img\r\n        style={{\r\n          width: squareWidth,\r\n          height: squareWidth,\r\n        }}\r\n        src={wN}\r\n        alt={\"wN\"}\r\n      />\r\n    ),\r\n    wP: ({ squareWidth, isDragging }: ICustomPieceProps) => (\r\n      <img\r\n        style={{\r\n          width: squareWidth,\r\n          height: squareWidth,\r\n        }}\r\n        src={wP}\r\n        alt={\"wP\"}\r\n      />\r\n    ),\r\n\r\n    bK: ({ squareWidth, isDragging }: ICustomPieceProps) => (\r\n      <img\r\n        style={{\r\n          width: squareWidth,\r\n          height: squareWidth,\r\n        }}\r\n        src={bK}\r\n        alt={\"bK\"}\r\n      />\r\n    ),\r\n    bQ: ({ squareWidth, isDragging }: ICustomPieceProps) => (\r\n      <img\r\n        style={{\r\n          width: squareWidth,\r\n          height: squareWidth,\r\n        }}\r\n        src={bQ}\r\n        alt={\"bQ\"}\r\n      />\r\n    ),\r\n    bB: ({ squareWidth, isDragging }: ICustomPieceProps) => (\r\n      <img\r\n        style={{\r\n          width: squareWidth,\r\n          height: squareWidth,\r\n        }}\r\n        src={bB}\r\n        alt={\"bB\"}\r\n      />\r\n    ),\r\n    bR: ({ squareWidth, isDragging }: ICustomPieceProps) => (\r\n      <img\r\n        style={{\r\n          width: squareWidth,\r\n          height: squareWidth,\r\n        }}\r\n        src={bR}\r\n        alt={\"bR\"}\r\n      />\r\n    ),\r\n    bN: ({ squareWidth, isDragging }: ICustomPieceProps) => (\r\n      <img\r\n        style={{\r\n          width: squareWidth,\r\n          height: squareWidth,\r\n        }}\r\n        src={bN}\r\n        alt={\"bN\"}\r\n      />\r\n    ),\r\n    bP: ({ squareWidth, isDragging }: ICustomPieceProps) => (\r\n      <img\r\n        style={{\r\n          width: squareWidth,\r\n          height: squareWidth,\r\n        }}\r\n        src={bP}\r\n        alt={\"bP\"}\r\n      />\r\n    ),\r\n  };\r\n\r\n  let chessboardConfig: Partial<IChessboardProps> = {\r\n    id: \"board-0\",\r\n    position: editorMode ? boardEditor.boardPosition : fen,\r\n    dropOffBoard: editorMode ? \"trash\" : \"snapback\",\r\n    draggable: true,\r\n    lightSquareStyle: { backgroundColor: \"#E8EDF9\" },\r\n    darkSquareStyle: { backgroundColor: \"#B7C0D8\" },\r\n    pieces: customPieces,\r\n    boardStyle: {\r\n      width: dimension,\r\n      height: dimension,\r\n      position: \"relative\",\r\n    },\r\n    width: dimension,\r\n\r\n    getPosition: editorMode ? boardEditor.setBoardPosition : setBoardPosition,\r\n    ...(editorMode ? { onDrop: boardEditor.onDrop } : { onDrop }),\r\n    // onDrop,\r\n    orientation: editorMode ? boardEditor.orientation : orientation || \"white\",\r\n    ...(!editorMode && {\r\n      onMouseOverSquare,\r\n      onMouseOutSquare,\r\n      squareStyles,\r\n      onDragOverSquare,\r\n      onSquareClick,\r\n      onSquareRightClick,\r\n    }),\r\n    sparePieces: editorMode,\r\n  };\r\n\r\n  const renderHistoryPanel = () => (\r\n    <ScChessHistoryPanel>\r\n      <div className=\"title\">\r\n        <img src={historyIcon} alt=\"\" />\r\n        History\r\n      </div>\r\n\r\n      {/* <table className=\"pgn\">\r\n          {pgn?.split(/\\d\\./)?.map?.(\r\n            (move: string, index: number) =>\r\n              index !== 0 && (\r\n                <tr>\r\n                  <td>{index}</td>\r\n                  {move\r\n                    .split(\" \")\r\n                    .filter((item: string) => item !== \"\")\r\n                    .map((singleMove: string, i: number) => (\r\n                      <td>{singleMove}</td>\r\n                    ))}\r\n                </tr>\r\n              )\r\n          )}\r\n        </table> */}\r\n      <div className=\"pgn-section\">\r\n        {pgn && <PGNViewer pgn={pgn} mode=\"edit\"></PGNViewer>}\r\n      </div>\r\n      <ScSidePanelNav>\r\n        <img\r\n          src={arrowLeft}\r\n          alt=\"\"\r\n          onClick={() => {\r\n            setSidePanelSection(\"menu\");\r\n          }}\r\n        />\r\n        <img src={arrowRight} alt=\"\" />\r\n      </ScSidePanelNav>\r\n    </ScChessHistoryPanel>\r\n  );\r\n  const renderSidePanel = () => {\r\n    switch (sidePanelSection) {\r\n      case \"menu\":\r\n        return (\r\n          <SidePanelMenu\r\n            undoMove={undoMove}\r\n            redoMove={redoMove}\r\n            reset={reset}\r\n            flip={flip}\r\n            setSidePanelSection={setSidePanelSection}\r\n          />\r\n        );\r\n      case \"history\":\r\n        return renderHistoryPanel();\r\n\r\n      default:\r\n        return (\r\n          <SidePanelMenu\r\n            undoMove={undoMove}\r\n            redoMove={redoMove}\r\n            reset={reset}\r\n            flip={flip}\r\n            setSidePanelSection={setSidePanelSection}\r\n          />\r\n        );\r\n    }\r\n  };\r\n  const renderPromotionModal = (\r\n    <ScPromotionModal>\r\n      <div>\r\n        <img\r\n          src={turn === \"w\" ? wQ : bQ}\r\n          alt=\"\"\r\n          width={dimension && dimension / 8}\r\n          height={dimension && dimension / 8}\r\n          onClick={() => {\r\n            pendingMove &&\r\n              promotion(\r\n                pendingMove.sourceSquare,\r\n                pendingMove.targetSquare,\r\n                \"q\"\r\n              );\r\n          }}\r\n        />\r\n      </div>\r\n      <div>\r\n        <img\r\n          src={turn === \"w\" ? wB : bB}\r\n          alt=\"\"\r\n          width={dimension && dimension / 8}\r\n          height={dimension && dimension / 8}\r\n          onClick={() => {\r\n            pendingMove &&\r\n              promotion(\r\n                pendingMove.sourceSquare,\r\n                pendingMove.targetSquare,\r\n                \"b\"\r\n              );\r\n          }}\r\n        />\r\n      </div>\r\n      <div>\r\n        <img\r\n          src={turn === \"w\" ? wR : bR}\r\n          alt=\"\"\r\n          width={dimension && dimension / 8}\r\n          height={dimension && dimension / 8}\r\n          onClick={() => {\r\n            pendingMove &&\r\n              promotion(\r\n                pendingMove.sourceSquare,\r\n                pendingMove.targetSquare,\r\n                \"r\"\r\n              );\r\n          }}\r\n        />\r\n      </div>\r\n      <div>\r\n        <img\r\n          src={turn === \"w\" ? wN : bN}\r\n          alt=\"\"\r\n          width={dimension && dimension / 8}\r\n          height={dimension && dimension / 8}\r\n          onClick={() => {\r\n            pendingMove &&\r\n              promotion(\r\n                pendingMove.sourceSquare,\r\n                pendingMove.targetSquare,\r\n                \"n\"\r\n              );\r\n          }}\r\n        />\r\n      </div>\r\n    </ScPromotionModal>\r\n  );\r\n\r\n  return (\r\n    <ScChessInterface dimension={dimension} editorMode={editorMode}>\r\n      <div id=\"board-container\" className=\"board-container\">\r\n        {promotionModal && renderPromotionModal}\r\n        <NativeChessboard {...chessboardConfig} />\r\n        {/* <PGNViewer pgn={pgn} mode=\"edit\" /> */}\r\n      </div>\r\n      {/* {!editorMode && ( */}\r\n      <ScChessSidePanel editorMode={editorMode}>\r\n        {editorMode ? (\r\n          <EditorSidePanel>\r\n            <div className=\"title\">Board Settings</div>\r\n            <div className=\"divider\"></div>\r\n            <label htmlFor=\"inputFen\">Fen</label>\r\n            <div className=\"input-fen\">\r\n              <input\r\n                name=\"inputFen\"\r\n                type=\"text\"\r\n                value={boardEditor?.fen}\r\n                onChange={(e: ChangeEvent<HTMLInputElement>) => {\r\n                  boardEditor.setFenPosition(e.target.value);\r\n                }}\r\n              />\r\n            </div>\r\n            <div className=\"btn-panel\">\r\n              <button onClick={boardEditor.reset}>Reset</button>\r\n              <button onClick={boardEditor.clear}>Clear</button>\r\n              <button onClick={boardEditor?.flip}>Flip</button>\r\n            </div>\r\n          </EditorSidePanel>\r\n        ) : (\r\n          <>{renderSidePanel()}</>\r\n        )}\r\n      </ScChessSidePanel>\r\n      {/* )} */}\r\n    </ScChessInterface>\r\n  );\r\n};\r\n\r\nexport default ChessInterface;\r\n","import React from \"react\";\nimport \"./app.scss\";\nimport ChessInterface from \"./components/ChessInterface/ChessInterface\";\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <ChessInterface />\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}